[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "OLC731 R ile Veri Analizi",
    "section": "",
    "text": "Bu dersin amacı, R yazılımını kullanarak veri üzerinde istenilen çok değişkenli istatistiksel ve psikometrik işlemlerin yapılabilmesini sağlamaktır.\nTez ve makale çalışmalarında öğrencilerimizin analizlerini R yazılımı ile hiçbir paket programa ihtiyaç duymadan kendi başlarına yapmalarını sağlamaktır.\nDers Salı günleri 09:30 - 12:30 arasında bilgisayar laboratuvarında yapılacaktır.\n\n\n🔗 Dr. Kübra Atalay Kabasakal\n🔗kkatalay@gmail.com\n🔗 katalay@hacettepe.edu.tr\n\n\n\n\n🔗Atar, B., Atalay Kabasakal, K, Unsal Ozberk, E. B., Ozberk, E. H. & Kibrislioglu Uysal, N. (2020). R ile Veri Analizi ve Psikometri Uygulamaları, Pegem Akademi, Ankara.\n🔗 Desjardins, C. D., & Bulut, O. (2018). Handbook of educational measurement and psychometrics using R. Boca Raton, FL: CRC Press.\n🔗Demir, E. R Diliyle İstatistik Uygulamaları. Pegem Akademi, Ankara.(2021).\n\n\n\nBu ders materyallerine ek olarak, R öğrenmek için bir dizi mükemmel kaynak vardır:\n\n\n\n\n\nDers sunumlarında yer alan R kodları ve veri setleri her ders öğrencilerle paylaşılacaktır. Paylaşım için 🔗moodle platformu kullanılcaktır.\nDers sunuların içinde kodlar saklı tutulmuştur. Sunumlar sırasında kodları açmadan önce düşünmenizi rica ediyorum.\n\n\n\nCode\nx &lt;- y + 2 \n\n\n\nDers sunumları içinde yer alan günün sorusu ve ödevleri mutlaka kendi çözümlerinizle yapmalısınız. Bunları da arşiv olarak kendi rpubs sayfasınızda saklamanızı istiyorum. rpubs sayfası açma işini sonra yapacağız.\nR kullanma konusunda hızlanmak istiyorsanız mümkün olduğu kadar çok alıştırma yapmanız gerekmektedir. Bunun için datacamp platformundan yararlanabilirsiniz.\nDers değerlendirmesi: ders içinde yapılan mini sınavlar 25 puan , ara sınav 25 puan ve final 50 puan olacak şekilde planlanmıştır. Ders içi mini sınavlar için 🔗moodle platformu kullanılcaktır.\nAra sınavın 12 Kasım, finalin ise 14 Ocak tarihinde yapılması planlanmaktadır*.\n*Tarihlerde değişiklik olduğunda sayfa güncellenecektir.\n\n\n\n\n\n🔗 R kurulumu ile ilgili bilgiler içerir.\n🔗 R studio ve güncellemeler ile ilgili bilgiler içerir."
  },
  {
    "objectID": "index.html#eğitmen",
    "href": "index.html#eğitmen",
    "title": "OLC731 R ile Veri Analizi",
    "section": "",
    "text": "🔗 Dr. Kübra Atalay Kabasakal\n🔗kkatalay@gmail.com\n🔗 katalay@hacettepe.edu.tr"
  },
  {
    "objectID": "index.html#kitaplar",
    "href": "index.html#kitaplar",
    "title": "OLC731 R ile Veri Analizi",
    "section": "",
    "text": "🔗Atar, B., Atalay Kabasakal, K, Unsal Ozberk, E. B., Ozberk, E. H. & Kibrislioglu Uysal, N. (2020). R ile Veri Analizi ve Psikometri Uygulamaları, Pegem Akademi, Ankara.\n🔗 Desjardins, C. D., & Bulut, O. (2018). Handbook of educational measurement and psychometrics using R. Boca Raton, FL: CRC Press.\n🔗Demir, E. R Diliyle İstatistik Uygulamaları. Pegem Akademi, Ankara.(2021).\n\n\n\nBu ders materyallerine ek olarak, R öğrenmek için bir dizi mükemmel kaynak vardır:"
  },
  {
    "objectID": "index.html#dersin-işlenişi-ve-değerlendirme",
    "href": "index.html#dersin-işlenişi-ve-değerlendirme",
    "title": "OLC731 R ile Veri Analizi",
    "section": "",
    "text": "Ders sunumlarında yer alan R kodları ve veri setleri her ders öğrencilerle paylaşılacaktır. Paylaşım için 🔗moodle platformu kullanılcaktır.\nDers sunuların içinde kodlar saklı tutulmuştur. Sunumlar sırasında kodları açmadan önce düşünmenizi rica ediyorum.\n\n\n\nCode\nx &lt;- y + 2 \n\n\n\nDers sunumları içinde yer alan günün sorusu ve ödevleri mutlaka kendi çözümlerinizle yapmalısınız. Bunları da arşiv olarak kendi rpubs sayfasınızda saklamanızı istiyorum. rpubs sayfası açma işini sonra yapacağız.\nR kullanma konusunda hızlanmak istiyorsanız mümkün olduğu kadar çok alıştırma yapmanız gerekmektedir. Bunun için datacamp platformundan yararlanabilirsiniz.\nDers değerlendirmesi: ders içinde yapılan mini sınavlar 25 puan , ara sınav 25 puan ve final 50 puan olacak şekilde planlanmıştır. Ders içi mini sınavlar için 🔗moodle platformu kullanılcaktır.\nAra sınavın 12 Kasım, finalin ise 14 Ocak tarihinde yapılması planlanmaktadır*.\n*Tarihlerde değişiklik olduğunda sayfa güncellenecektir."
  },
  {
    "objectID": "index.html#kurulumlar",
    "href": "index.html#kurulumlar",
    "title": "OLC731 R ile Veri Analizi",
    "section": "",
    "text": "🔗 R kurulumu ile ilgili bilgiler içerir.\n🔗 R studio ve güncellemeler ile ilgili bilgiler içerir."
  },
  {
    "objectID": "demo/html_document2.html",
    "href": "demo/html_document2.html",
    "title": "ORNEK DOSYA",
    "section": "",
    "text": "Pırlanta ücretleri çeşitli faktörlere bağlıdır\n\ncut (Bakınız Tablo @ref(tab:kesim))\ncolour (Bakınız Tablo @ref(tab:renk))\nclarity (Bakınız Şekil @ref(fig:parlaklik))\ncarats (Bakınız Şekil @ref(fig:karat))\nBakınız Bolum @ref(sonuclar) sonuclar icin\n\n\n\n\n\n\n\nCode\ndiamonds %&gt;%\n  group_by(cut) %&gt;%\n  summarise(avg = mean(price),\n            .groups = \"drop\") %&gt;%\n  kable(digits = 0, \n        col.names = c(\"Cut\", \"Average Price\"),\n        caption = \"Kesime göre ortalama pırlanta fiyatı.\") %&gt;%\n  kable_material()\n\n\n\n\nKesime göre ortalama pırlanta fiyatı.\n\n\nCut\nAverage Price\n\n\n\n\nFair\n4359\n\n\nGood\n3929\n\n\nVery Good\n3982\n\n\nPremium\n4584\n\n\nIdeal\n3458\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\ndiamonds %&gt;%\n  group_by(color) %&gt;%\n  summarise(avg = mean(price),\n            .groups = \"drop\") %&gt;%\n  kable(digits = 0, \n        col.names = c(\"Cut\", \"Average Price\"),\n        caption = \"Renge göre ortalama pırlanta fiyatı.\") %&gt;%\n  kable_material()\n\n\n\n\nRenge göre ortalama pırlanta fiyatı.\n\n\nCut\nAverage Price\n\n\n\n\nD\n3170\n\n\nE\n3077\n\n\nF\n3725\n\n\nG\n3999\n\n\nH\n4487\n\n\nI\n5092\n\n\nJ\n5324\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nggplot(diamonds, aes(x = clarity, y = price)) +\n  geom_boxplot() \n\n\n\n\n\nParlaklığa göre pırlanta fiyatı\n\n\n\n\n\n\n\n\n\nCode\nggplot(diamonds, aes(x = carat, y = price)) +\n  stat_smooth()\n\n\n\n\n\nKarata göre pırlanta fiyatı\n\n\n\n\n\n\n\n“Kodlar haricinde pırlantalarla ilgilenmiyorum :)”"
  },
  {
    "objectID": "demo/html_document2.html#tablolar",
    "href": "demo/html_document2.html#tablolar",
    "title": "ORNEK DOSYA",
    "section": "",
    "text": "Code\ndiamonds %&gt;%\n  group_by(cut) %&gt;%\n  summarise(avg = mean(price),\n            .groups = \"drop\") %&gt;%\n  kable(digits = 0, \n        col.names = c(\"Cut\", \"Average Price\"),\n        caption = \"Kesime göre ortalama pırlanta fiyatı.\") %&gt;%\n  kable_material()\n\n\n\n\nKesime göre ortalama pırlanta fiyatı.\n\n\nCut\nAverage Price\n\n\n\n\nFair\n4359\n\n\nGood\n3929\n\n\nVery Good\n3982\n\n\nPremium\n4584\n\n\nIdeal\n3458\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\ndiamonds %&gt;%\n  group_by(color) %&gt;%\n  summarise(avg = mean(price),\n            .groups = \"drop\") %&gt;%\n  kable(digits = 0, \n        col.names = c(\"Cut\", \"Average Price\"),\n        caption = \"Renge göre ortalama pırlanta fiyatı.\") %&gt;%\n  kable_material()\n\n\n\n\nRenge göre ortalama pırlanta fiyatı.\n\n\nCut\nAverage Price\n\n\n\n\nD\n3170\n\n\nE\n3077\n\n\nF\n3725\n\n\nG\n3999\n\n\nH\n4487\n\n\nI\n5092\n\n\nJ\n5324"
  },
  {
    "objectID": "demo/html_document2.html#grafikler",
    "href": "demo/html_document2.html#grafikler",
    "title": "ORNEK DOSYA",
    "section": "",
    "text": "Code\nggplot(diamonds, aes(x = clarity, y = price)) +\n  geom_boxplot() \n\n\n\n\n\nParlaklığa göre pırlanta fiyatı\n\n\n\n\n\n\n\n\n\nCode\nggplot(diamonds, aes(x = carat, y = price)) +\n  stat_smooth()\n\n\n\n\n\nKarata göre pırlanta fiyatı\n\n\n\n\n\n\n\n“Kodlar haricinde pırlantalarla ilgilenmiyorum :)”"
  },
  {
    "objectID": "06_Rmarkdown.html",
    "href": "06_Rmarkdown.html",
    "title": "Rapor Hazırlama",
    "section": "",
    "text": "Bu bölümde kullanacağımız paketler şunlardır.\n\n\nCode\n# bu bölüm için gerekli paketler\nlibrary(tidyverse) # çeşitli veri manipülasyon fonksiyonları\nlibrary(knitr) # tablo ve görüntü gösterimi için\nlibrary(kableExtra) # tabloları şekillendirmek için\nlibrary(papaja) # APA tarzı tablolar için\nlibrary(gt) # süslü tablolar için\nlibrary(DT) # etkileşimli tablolar için\n\n\n🔗İndir R Markdown Cheat Sheet.\n🔗İndir R Markdown Cheat Sheet TURKCE\n\n🔗R markdon sunusu\n\n\n🔗markdown hatırlatıcı notlar\n\n\n\nBir rapor hazırladığınızı düşünün\n\niçinde analiz sonuçları olan tablolar\ngrafikler ve görsel olsun\nbu raporu güncellemeniz gerektiğinde veri seti, grafikler, analizler başka dizinlerde olabilir.\nTekrarlanabilir raporlar, tüm analizleri gerçekleştirmek ve tabloları oluşturmak için gereken kodla birlikte rapor metnini tek bir belgede bir araya getirmektir.\nBu, başlangıçta biraz fazladan çaba gerektirse de, herhangi bir değişiklik olduğunda tek bir düğmeye basarak tüm raporunuzu güncellemenizi sağlayarak size fazlasıyla geri ödeme yapacaktır.\nAraştırmalar ayrıca, bilimsel literatürdeki makalelerin çoğunda olmasa bile birçoğunda raporlama hataları olduğunu göstermektedir. Tekrarlanabilir raporlar, transkripsiyon ve yuvarlama hatalarını önlemeye yardımcı olur.\nRapor daha sonra orijinal formattan HTML, word ve ya PDF gibi daha taşınabilir başka bir formata “derlenir”. Bu, örneğin Microsoft Excel’de veya SPSS gibi bir istatistik programında bir grafik oluşturup ardından bunu Microsoft Word’e yapıştırdığınız geleneksel kesme ve yapıştırma yaklaşımlarından farklıdır.\n\n\n\n\n\nİlk olarak, organize olmamız gerekiyor. RStudio’daki projeler, bir proje için ihtiyaç duyduğunuz tüm dosyaları gruplandırmanın bir yoludur. Çoğu proje komut dosyalarını, veri dosyalarını ve komut dosyası veya görüntüler tarafından oluşturulan PDF raporu gibi çıktı dosyalarını içerir.\n\n\n\n\nBilgisayarınızın dosya sistemi, hem dosyaları hem de “alt dizinleri” içeren büyük dizin gibidir. Bir dosyanın konumunu adıyla ve içinde bulunduğu tüm dizinlerin adlarıyla belirtebilirsiniz.\nÖrneğin, Kubra Masaüstünde report.Rmd adında bir dosya arıyorsa, tam dosya yolunu şu şekilde belirtebilir: /Users/Kubra/Desktop/report.Rmd , çünkü Masaüstü dizini, tüm dosya sisteminin tabanında bulunan Kullanıcılar/Users dizininin içindeki Kubra dizininin içindedir. Bu dosya masaüstünüzde olsaydı, kullanıcı dizininizin adı da Kubra değilse muhtemelen farklı bir yola sahip olurdunuz. Şu anda oturum açmış olan kişinin kullanıcı dizinini temsil etmek için ~ kısayolunu da kullanabilirsiniz: ~/Desktop/report.Rmd.\n\n\n\n\n\nTüm dosyalarınızı nereye koymalısınız? Genellikle tek bir proje için tüm komut dosyalarınızın ve veri dosyalarınızın bilgisayarınızdaki tek bir klasörde, o projenin çalışma dizininde olmasını istersiniz. Dosyaları bu ana proje dizini içindeki alt dizinlerde düzenleyebilirsiniz, örneğin tüm ham veri dosyalarını data/import adlı bir dizine koyabilir ve tüm görüntü dosyalarını images adlı bir dizine kaydedebilirsiniz.\nKodunuz, uygun biçimi kullanarak yalnızca üç tür konumdaki dosyalar kullanılmalıdır.\n\n\n\n\nYer\nÖrnek\n\n\n\n\nweb\n“https://atalay-k.github.io/OLC731/import/veri1.txt”\n\n\ndizin içinde\n“veri1.txt”\n\n\nalt dizin içinde\n“import/veri1.txt”\n\n\n\n\nBir komut dosyasında asla çalışma dizininizi ayarlamayın veya değiştirmeyin.\n\n\nR Markdown dosyaları otomatik olarak .Rmd dosyasının bulunduğu dizini çalışma dizini olarak kullanacaktır.\nKodunuz çalışma dizininizin bir alt dizinindeki bir dosyaya ihtiyaç duyuyorsa (örneğin, import/veri1.txt), çalışma dizinini başka bir konuma veya bilgisayara taşıdığınızda erişilebilir olması için dosyayı göreli bir yol kullanarak yükleyin:\n\n\n\nCode\ndat &lt;- read.table(\"import/veri1.txt\")  # dogru\n\n\nBu dosyayı aşağıdaki gibi mutlak yol/adres ile yüklemeyin:\n\n\nCode\ndat &lt;- read.table(\"c:/Users/Kubra/Desktop/OLC731/import/veri1.txt\")  # yanlıs\n\n\n\nÖrnek veriyi düzgün aktarmak aşağıdaki kodla sağlanır.\n\n\n\nCode\n(veri1 &lt;- read.table(\"import/veri1.txt\",\n                    header= TRUE,\n                    sep= \";\",\n                    dec= \",\"))\n\n\n   no m_1  m_2 m_3  m_4 m_5\n1 522  12 14.0  16 20.0  10\n2 222   5   NA  20 10.0  10\n3 454   5 10.2   6  4.0  10\n4 567  10 20.0  NA 12.2  20\n\n\n\nAyrıca, Windows’a özgü geriye doğru eğik çizgi kullanma kuralının aksine, ileriye doğru eğik çizgi kullanma kuralına dikkat edin. Bu, dosyalara yapılan referansların işletim sistemlerinden bağımsız olarak herkes için çalışmasını sağlamak içindir.\n\n\n\n\nDosyaları, hem insanların hem de bilgisayarların kolayca bulabileceği şekilde adlandırın. İşte bazı önemli ilkeler:\n\ndosya ve dizin adları yalnızca harf, rakam, tire ve alt çizgi içermeli, dosya adı ve uzantısı arasında nokta (.) olmalıdır (bu boşluk olmadığı anlamına gelir!)\nBüyük harf kullanımı konusunda tutarlı olun (hatırlamayı kolaylaştırmak için bir kural belirleyin, örneğin her zaman küçük harf kullanın)\ndosya adının bölümlerini ayırmak için alt çizgi (_) ve bir bölümdeki sözcükleri ayırmak için tire (-) kullanın\ndosyaları mantıklı bir sırayla alfabetik hale getiren ve aradığınız dosyayı bulmanızı kolaylaştıran bir kalıpla adlandırın\nbir dosya adını listenin en üstüne taşımak için önüne alt çizgi ekleyin veya sıralarını kontrol etmek için tüm dosyaların önüne sayı ekleyin\ntarihler için YYYY-MM-DD biçimini kullanın, böylece kronolojik sıraya göre sıralanırlar\n\nÖrneğin, bu dosya adları tam bir karmaşa:\n\nVeri (Katilimci) 04-15.xls\nfinal raporu2.doc\nKatilimci Veri Nisan 12.xls\n(\"proje notlari\nAnket Veri Kasim 15.xls\nrapor.doc\nrapor son.doc\n\nBenzer dosyaların aynı yapıya sahip olması ve dosyaları taramanın veya ilgili dosyaları bulmak için kod kullanmasının kolay olması için dosyaları yapılandırabilirsiniz.\n\nproje-notlari\nveri_katilimci_2021-04-12.xls\nveri_katilimci_2021-04-15.xls\nveri_anket_2021-04-15.xls\nrapor_v1.doc\nrapor_v2.doc\nrapor_v3.doc\n\n\nYukarıdaki dosyaları adlandırmak için başka yollar düşünün. Kendi proje dosyalarınızdan bazılarına bakın ve neleri geliştirebileceğinizi görün.\n\n\n\n\n\nArtık dosya sisteminin nasıl çalıştığını ve komut dosyalarının bunlara erişmesini kolaylaştırmak için nesneleri nasıl adlandıracağımızı anladığımıza göre, projemizi yapmaya hazırız.\nÖncelikle, bu sınıf için tüm materyallerinizi tutacağınız yeni bir dizin oluşturun (benimki Ranaliz adınında). Bu dizini Global Options’ın general bölümü altında varsayılan çalışma dizini olarak ayarlayabilirsiniz. Bu, bir projede çalışmıyorsanız dosyaların varsayılan olarak buraya kaydedileceği anlamına gelir.\n\n\nBu dizin OneDrive’daysa veya tam dosya yolu özel karakterler içeriyorsa ya da bazı Windows makinelerinde 260 karakterden fazlaysa bazen sorunlara neden olabilir.\n\n\nArdından, OLC731_2023 adında yeni bir proje oluşturmak için File menüsü altında New Project... öğesini seçin. Yeni oluşturduğunuz dizinin içine kaydettiğinizden emin olun. RStudio kendini yeniden başlatacak ve çalışma dizini olarak bu yeni proje dizini ile açılacaktır.\n\nProje dizininin içeriğini görmek için sağ alt bölmedeki Files sekmesine tıklayın. Tüm proje bilgilerini içeren Ranaliz.Rproj adlı bir dosya göreceksiniz, projeyi açmak için üzerine çift tıklayabilirsiniz.\n\nAyarlarınıza bağlı olarak, özel kullanıcı ayarlarınızı içeren .Rproj.user adlı bir dizin de görebilirsiniz. Bu ve nokta ile başlayan diğer “görünmez” dosyaları yok sayabilirsiniz.\n\n\n\n\n\n\nBu derste, bir içindekiler tablosu, uygun başlıklar, kod parçaları, tablolar, resimler, satır içi R ve bir kaynakça içeren bir R Markdown belgesi oluşturmayı öğreneceğiz.\n\n\nR Markdown’a çok benzeyen quarto adında yeni bir tür tekrarlanabilir rapor formatı var. Bu derste quarto kullanmayacağız çünkü aynı anda hem quarto hem de R Markdown öğreniyorsanız kafa karıştırıcı olabilecek birkaç küçük farkı var, ancak R Markdown’ı öğrendikten sonra quarto’yu çok kolay bir şekilde öğrenebilirsiniz.\n\n\nTekrar üretilebilir raporlar oluşturmak için metin ve kodun karıştırılmasını sağlayan R Markdown kullanacağız. Yeniden üretilebilir bir komut dosyası, kod bloklarında kod bölümleri içerecektir. Bir kod bloğu arka arkaya üç backtick sembolü ile başlar ve biter, küme parantezleri arasında kod hakkında bazı bilgiler bulunur, örneğin {r chunk-name, echo=FALSE} (bu kodu çalıştırır, ancak derlenen belgede kod bloğunun metnini göstermez). Kod bloklarının dışındaki metin, başlıklar, paragraflar, listeler, kalınlaştırma ve bağlantılar gibi biçimlendirmeyi belirtmenin bir yolu olan markdown ile yazılır. Örnek Dosyayı beraber inceleyelim.\nBir şablondan yeni bir R Markdown dosyası açarsanız, içinde birkaç kod bloğu bulunan örnek bir belge görürsünüz. Bir R Markdown (Rmd) belgesinden HTML veya PDF raporu oluşturmak için belgeyi derlersiniz. Bir belgeyi derlemeye RStudio’da örme denir. Dosyanızı bir rapora derlemek için üzerine tıkladığınız, içinden iğneler geçen bir iplik yumağına benzeyen bir düğme vardır.\n\n\nFile &gt; New File &gt; R Markdown... menüsünden yeni bir R Markdown dosyası oluşturun. Başlığı ve yazarı değiştirin, dosyayı Ornek1.Rmd olarak kaydedin, ardından bir html dosyası oluşturmak için ör düğmesine tıklayın.\n\n\n\n\n🔗 YAML başlığı çeşitli seçenekleri ayarlayabileceğiniz bölümdür.\n\n---\ntitle: \"Demo\"\nauthor: \"Kubra\"\noutput:\n  html_document:\n    toc: true\n    toc_float:\n      collapsed: false\n      smooth_scroll: false\n      number_sections: false\n---\n\nSeçeneklerin ne işe yaradığını görmek için değerleri false tan true ya değiştirmeyi deneyin.\n\n\nVarsayılan temalar şunlardır: default, cerulean, cosmo, darkly, flatly, journal, lumen, paper, readable, sandstone, simplex, spacelab, united ve yeti. Linkten 🔗daha fazla temayı inceleyebilirsiniz..\n\n\n\n\n\nVarsayılan şablonu kullanarak RStudio’da yeni bir R Markdown dosyası oluşturduğunuzda, otomatik olarak bir kurulum blogu oluşturulur.\n\n\n\nCode\nknitr::opts_chunk$set(echo = TRUE)\n\n\n\nKod parçaları için daha fazla varsayılan seçeneği buradan ayarlayabilirsiniz. Olası seçeneklerin açıklamaları için knitr seçenekleri belgelerine bakın. knitr dokumanı\n\n\n\nCode\nknitr::opts_chunk$set(\n  fig.width  = 8,\n  fig.height = 5,\n  fig.path   = 'images/',\n  echo       = FALSE,\n  warning    = TRUE,\n  message    = FALSE,\n  cache      = FALSE\n)\n\n\nYukarıdaki kod aşağıdaki seçenekleri ayarlar:\n\nfig.width = 8 : varsayılan şekil genişliği 8 inçtir (bunu tek tek şekiller için değiştirebilirsiniz)\nfig.height = 5 : varsayılan şekil yüksekliği 5 inçtir\nfig.path = ‘images/’ : şekiller “images” dizinine kaydedilir\necho = FALSE : işlenen belgede kod parçalarını gösterme\nwarning = FALSE : herhangi bir işlev uyarısı gösterme\nmessage = FALSE : herhangi bir işlev mesajı gösterme\ncache = FALSE : her örgü ördüğünüzde tüm görüntüleri ve nesneleri oluşturmak için tüm kodu çalıştırın (zaman alıcı kodunuz varsa TRUE olarak ayarlayın) Konsola (str(knitr::opts_chunk$get())) yazarak geçerli kod bloğu seçeneklerinin bir listesini bulun.\n\nİhtiyacınız olan paketleri (library())kullanarak da bu bloğunuza ekleyebilirsiniz. Genellikle bir komut dosyası üzerinde çalışırken, başka bir eklenti paketi yüklemeniz gerektiğini fark edersiniz. library(...) çağrısını kodun en altına gömmeyin. En üste koyun, böylece kullanıcı hangi paketlerin gerekli olduğuna dair genel bir fikir elde edilir.\n\ntidyverse paketinden fonksiyon kullanacağız, bu yüzden kurulum bloğunuza yükleyin.\n\n\n\n\n\nBir içindekiler tablosu (toc) eklerseniz, bu tablo belge başlıklarınızdan oluşturulur. Markdown’daki başlıklar, başlık başlığının önüne bir veya daha fazla hash (#) eklenerek oluşturulur.\nKendi analiz komut dosyalarınızı geliştirirken aşağıdaki yapıyı kullanın:\nKullanmanız gereken tüm eklenti paketlerini yükleyin\nherhangi bir özel fonksiyon tanımlayın\nbirlikte çalışacağınız verileri yükleyin veya simüle edin\nkaydetmeniz gereken her şeyi kaydedin\n\n\nVarsayılan metni silin ve başlıklar ve alt başlıklar oluşturarak belgenize biraz yapı ekleyin. Bazı verileri yükleyeceğiz, bir özet tablo oluşturacağız, verileri çizeceğiz ve analiz edeceğiz.\n\n\n\n\n\nMetninize eklemek için görüntüler, tablolar veya hesaplamalar oluşturan ve görüntüleyen kod parçaları ekleyebilirsiniz. Bazı verileri yükleyerek başlayalım.\nİlk olarak, belgenizde bir kod bloğu oluşturun. Bu kod iris veri setini yükler.\n\n\n\nCode\nlibrary(datasets)\ndata(iris)\n\n\n\n\n\n\nKod blokları içine hash sembolü (#) ile yorum ekleyebilirsiniz. R yorumlayıcısı, hash’ten satır sonuna kadar olan karakterleri yoksayacaktır.\n\n\n\nCode\nn &lt;- nrow(iris) # toplam satır sayısı\nmu &lt;- mean(iris$Petal.Length)  # taç yaprak uzunluğu ortalaması\nsd &lt;- sd(iris$Petal.Length) # taç yaprak uzunluğu standart sapması\n\n\nsimule_deger &lt;- rnorm(n, mu, sd)\n\n\n\nBir kod parçasını, özellikle kod rapor metninde açıklanmamışsa, orada ne yaptığınızı açıklayan bir yorumla başlatmak genellikle iyi bir uygulamadır.\nNesnelerinizi açık bir şekilde adlandırırsanız, genellikle açıklayıcı yorumlar eklemeniz gerekmez. Örneğin, yukarıdaki üç nesneyi n_iris, ort_petal ve sd_petal olarak adlandırmış olsaydım, yorumları atlardım.\nYorumların bir başka kullanımı da çalıştırmak istemediğiniz ancak silmek de istemediğiniz bir kod bölümünü “yorumlamaktır”. Örneğin, bir paketi yüklemek için kullanılan kodu kodunuza dahil edebilirsiniz, ancak kodun her çalıştırıldığında uzun bir yüklemeye zorlamaması için her zaman yorumlamanız gerekir.\n\n\n\nCode\n# install.packages(\"dplyr\")\n# install.packages(\"tidyr\")\n# install.packages(\"ggplot2\")\n\n\n\nSatırları seçip Cmd-shift-C (Mac) veya Ctrl-shift-C (Windows) yazarak aynı anda birden fazla satıra yorum yazabilir veya yorumu kaldırabilirsiniz.\n\n\nKodunuzu iyi bir şekilde yorumlamak biraz sanattır. Bu beceriyi geliştirmenin en iyi yolu, başkalarının kodlarını okumak ve başkalarının kodunuzu incelemesini sağlamaktır.\n\n\n\n\n\nŞimdi setosa ve virginica çiçek türlerinde yaprak uzunluklarını analiz edelim. Önce analiz kodunu çalıştıracağız. Daha sonra makalemizde kullanmak isteyebileceğimiz sayıları değişkenlere kaydedeceğiz ve uygun şekilde yuvarlayacağız. Son olarak, bir sonuçları biçimlendirmek için glue::glue() kullanacağız.\n\n\n\nCode\n# analiz\nlibrary(dplyr)\nsetosa_petal &lt;- filter(iris, Species == \"setosa\") %&gt;% pull(Petal.Length)\nvirginica_petal &lt;- filter(iris, Species == \"virginica\") %&gt;% pull(Petal.Length)\npetal_test &lt;- t.test(setosa_petal, virginica_petal)\n\n# rapor edilecek degerleri yorumlama\nt &lt;- petal_test$statistic %&gt;% round(2)\ndf &lt;- petal_test$parameter %&gt;% round(1)\np &lt;- petal_test$p.value %&gt;% round(3)\n# handle p-values &lt; .001\np_symbol &lt;- ifelse(p &lt; .001, \"&lt;\", \"=\")\nif (p &lt; .001) p &lt;- .001\n\n# sonucları birleştirme\npetal_result &lt;- glue::glue(\"t = {t}, df = {df}, p {p_symbol} {p}\")\n\n\n\nSonuçları, aşağıdaki gibi görünen satır içi R kodu ile bir paragrafa ekleyebilirsiniz:\n\n virginica çiçeklerinin yaprakları setosa çiçeklerinin yapraklarından uzundur(`r petal_result`).\nvirginica çiçeklerinin yaprakları setosa çiçeklerinin yapraklarından uzundur (t = -49.99, df = 58.6, p &lt; 0.001).\n\n\n\n\nÇalışmaların yöntem bölümüne betimsel bilgiler eklemek istediğimizde\n\n\n\nCode\nozet_tablo &lt;- iris %&gt;%\n  group_by(Species) %&gt;%\n  summarise(\n    n = n(),\n    ortalama = mean(Petal.Length),\n    sd = sd(Petal.Length)\n  )\nozet_tablo\n\n\n# A tibble: 3 × 4\n  Species        n ortalama    sd\n  &lt;fct&gt;      &lt;int&gt;    &lt;dbl&gt; &lt;dbl&gt;\n1 setosa        50     1.46 0.174\n2 versicolor    50     4.26 0.470\n3 virginica     50     5.55 0.552\n\n\n\nYukarıdaki tablo etkileşimli görünümde tibble biçiminde yazdırılacak, ancak ördüğünüzde YAML başlığındaki df_print ayarındaki biçimi kullanacaktır.\n\n\nYukarıdaki tabloda, sütun etiketlerini değiştirerek, ortalamaları yuvarlayarak ve bir başlık ekleyerek daha okuyucu dostu hale getirlebilir. Bunun için (knitr::kable()) işlevini veya tablolarınızı biçimlendirmek için diğer paketlerdeki daha özel işlevleri kullanabilirsiniz.\n\n\nknitrkableExtrapapajagt\n\n\n\n\nCode\nyeni_ad &lt;- c(\"Çiçek Türü\", \"Frekans\", \"Ortalama\", \"Sd\")\n\nknitr::kable(ozet_tablo,\n             digits = 2,\n             col.names = yeni_ad,\n             caption = \"Petal Uzulukları için Özet Tablo\")\n\n\n\nPetal Uzulukları için Özet Tablo\n\n\nÇiçek Türü\nFrekans\nOrtalama\nSd\n\n\n\n\nsetosa\n50\n1.46\n0.17\n\n\nversicolor\n50\n4.26\n0.47\n\n\nvirginica\n50\n5.55\n0.55\n\n\n\n\n\n\n\nkableExtra paketi çok sayıda seçenek sunar.\n\n\nCode\nlibrary(kableExtra)\n\nkable(ozet_tablo,\n      digits = 2,\n      col.names = c(\"Çiçek Türü\", \"Frekans\", \"Ortalama\", \"Sd\"),\n      caption = \"Petal Uzulukları için Özet Tablo\") |&gt;\n  kable_classic() |&gt;\n  kable_styling(full_width = FALSE, font_size = 20) |&gt;\n  add_header_above(c(\" \" = 2, \"Degerler\" = 2)) |&gt;\n  kableExtra::row_spec(2, bold = TRUE, background = \"lightgrey\")\n\n\n\n\nPetal Uzulukları için Özet Tablo\n\n\n\n\n\n\n\n\n\n\nDegerler\n\n\n\nÇiçek Türü\nFrekans\nOrtalama\nSd\n\n\n\n\nsetosa\n50\n1.46\n0.17\n\n\nversicolor\n50\n4.26\n0.47\n\n\nvirginica\n50\n5.55\n0.55\n\n\n\n\n\n\n\n\n\n\npapaja paketi ile APA formatında tablolar elde edebilirsiniz.\n\n\nCode\npapaja::apa_table(ozet_tablo,\n                  col.names = c(\"Çiçek Türü\", \"Frekans\", \"Ortalama\", \"Sd\"),\n                  caption = \"Petal Uzulukları için Özet Tablo\",\n                  col_spanners = list(\"Means\" = c(3, 4)))\n\n\n\n(#tab:papaja-demo) Petal Uzulukları için Özet Tablo\n\n\nÇiçek Türü\nFrekans\nOrtalama\nSd\n\n\n\n\nsetosa\n50\n1.46\n0.17\n\n\nversicolor\n50\n4.26\n0.47\n\n\nvirginica\n50\n5.55\n0.55\n\n\n\n\n\n\n\ngt paketinde de çok sayıda seçenek bulunmaktadır.\n\n\nCode\nlibrary(gt)\n\ngt(ozet_tablo, caption = \"Petal Uzulukları için Özet Tablo\") |&gt;\n  fmt_number(columns = c(ortalama, sd),\n             decimals = 2) |&gt;\n  cols_label(Species = \"Çiçek Türü\",\n             n = \"Frekans\",\n             ortalama = \"ortalama\",\n             sd = \"sd\") |&gt;\n  tab_spanner(label = \"Degerler\",\n              columns = c(ortalama, sd)) |&gt;\n  opt_stylize(style = 6, color = \"blue\")\n\n\n\n\n\n\n\nPetal Uzulukları için Özet Tablo\n\n\nÇiçek Türü\nFrekans\nDegerler\n\n\nortalama\nsd\n\n\n\n\nsetosa\n50\n1.46\n0.17\n\n\nversicolor\n50\n4.26\n0.47\n\n\nvirginica\n50\n5.55\n0.55\n\n\n\n\n\n\n\n\n\n\n\n\n\nTablo eklemek için diğer bir yol ise elle tablo oluşturmaktadır. Tablo oluşturulmak istendiğinde aşağıdaki şekilde eklenebilir.\n\n\nCode\n| col1   |col2    |  \n|:------:|:------:|\n|içerik1 |içerik2 |\n\n\nYukarıdaki içerik örüldüğünde aşağıdaki tablo oluşmaktadır.\n\n\n\ncol1\ncol2\n\n\n\n\niçerik1\niçerik2\n\n\n\nTablo eklemek için Rstudio yer alan Visual özelliğini kullanmakta pratiktir. Hazırladığınız markdown dosyasını Visual modunda açtığınızda Table menüsünde tablo oluşturma, satır sütun ekleme, hizalama gibi işlemler menü aracılığı ile yapılabilimektedir.\n\n\n\n\n\nŞekil başlığının kod bloğında nasıl biçimlendirildiğine dikkat edin.\n\n\n\nCode\ndat &lt;- subset(iris, Species != \"versicolor\")\ndat$Species &lt;- factor(dat$Species)\n\nggplot(dat, aes(Species, Petal.Length)) +\n  geom_boxplot(width = 0.25,\n               show.legend = FALSE)  +\n  labs(x = \"\", y = \"Petal Uzunluğu\") +\n  theme(text = element_text(size = 20, family = \"Times\"))\n\n\n\n\n\nPetal Uzunlukları ve Türler\n\n\n\n\n\n\n\n\n\nPetal Uzunlukları ve Türler\n\n\n\n\n\nSon satır varsayılan metin boyutunu ve yazı tipini değiştirir, bu da bir derginin gereksinimlerini karşılayan şekiller oluşturmak için yararlı olabilir.\n\n\nKodlarla oluşturamadığınız şekilleri de resim dosyaları ile dökümana ekleyebilirsiniz:\n\n![neden R](https://miro.medium.com/v2/resize:fit:720/format:webp/1*TX77o_zJ4zbpJ3vN4BkLsg.jpeg){style=\"width: 50%\"}\n\n\n\nneden R\n\n\n\n\n\n\nMarkdown bölümler arasında bağlantılar içeren daha uzun raporlar oluşturmanıza yardımcı olur.\nBaşlığı olan tüm şekillere veya tablolara otomatik olarak şekil ve tablo numaraları ekler ve bunlara referansla bağlantı vermenize olanak sağlar.\nTablolara ve şekillere bağlantılar oluşturmak için, şekillerinizi veya tablolarınızı oluşturan kod bloklarınız adlandırmanız ve ardından satır içi kodlamanızda bu adları çağırmanız gerekir:\n\n\n\nCode\n# kodlar\n\n\n\n\nCode\n# kodlar\n\n\nBakınız Tablo\\ \\@ref(tab:tablo1) or Sekil\\ \\@ref(fig:sekil1).\n\nKod blok adları yalnızca harf, rakam ve tire içerebilir. Boşluk veya alt çizgi gibi başka karakterler içeriyorlarsa, referanslama çalışmayacaktır.\n\nBaşlıklarınızı {#} ile adlandırarak da raporunuzun farklı bölümlerine bağlantı verebilirsiniz:\n# Baslık 1 {#baslık-1}\n\n## Baslık 2 {#baslık-2}\n\nBakınız Bolum\\ \\@ref(baslık-1) and Bolum\\ \\@ref(baslık-2)\n\nAşağıdaki kod, ggplot2 paketindeki diamonds veri seti kullanarak tam bir raporda metnin şekillere veya tablolara nasıl bağlanacağını göstermektedir - bu belgeyi şimdi oluşturmak için aşağıdaki kodları kullanın.\n\n# ORNEK DOSYA\n\n```{r setup, include=FALSE}\nknitr::opts_chunk$set(echo = FALSE,\n                      message = FALSE,\n                      warning = FALSE)\nlibrary(tidyverse)\nlibrary(kableExtra)\ntheme_set(theme_minimal())\n```\n\nPırlanta ücretleri çeşitli faktörlere bağlıdır\n\n-   cut (Bakınız Tablo \\@ref(tab:kesim))\n-   colour (Bakınız Tablo \\@ref(tab:renk))\n-   clarity (Bakınız Şekil \\@ref(fig:parlaklik))\n-   carats (Bakınız Şekil \\@ref(fig:karat))\n-   Bakınız Bolum \\@ref(sonuclar) sonuclar icin\n\n## Tablolar\n\n### Kesim\n\n```{r kesim}\ndiamonds %&gt;%\n  group_by(cut) %&gt;%\n  summarise(avg = mean(price),\n            .groups = \"drop\") %&gt;%\n  kable(digits = 0, \n        col.names = c(\"Cut\", \"Average Price\"),\n        caption = \"Kesime göre ortalama pırlanta fiyatı.\") %&gt;%\n  kable_material()\n```\n\n### Renk\n\n```{r renk}\ndiamonds %&gt;%\n  group_by(color) %&gt;%\n  summarise(avg = mean(price),\n            .groups = \"drop\") %&gt;%\n  kable(digits = 0, \n        col.names = c(\"Cut\", \"Average Price\"),\n        caption = \"Renge göre ortalama pırlanta fiyatı.\") %&gt;%\n  kable_material()\n```\n\n## Grafikler\n\n### Parlaklık\n\n```{r parlaklik, fig.cap = \"Parlaklığa göre pırlanta fiyatı\"}\nggplot(diamonds, aes(x = clarity, y = price)) +\n  geom_boxplot() \n```\n\n### Karat\n\n```{r karat, fig.cap = \"Karata göre pırlanta fiyatı\"}\nggplot(diamonds, aes(x = carat, y = price)) +\n  stat_smooth()\n```\n\n### Sonuclar {#sonuclar}\n\n\"Kodlar haricinde pırlantalarla ilgilenmiyorum :) \"\nBu format varsayılan olarak numaralandırılmış bölümler bulunuyor, numaralandırma bunu istemiyorsanız YAML bölümünde number_sections: false ayarını yapın. Numaralandırılmış bölümleri kaldırırsanız, \\@ref(sonuclar) gibi bağlantılar “??” gösterecektir, bu nedenle bunun yerine aşağıdaki gibi URL bağlantı adresi kullanmanız gerekir:\nSon açıklamalar için son bölüme bakınız.\n\n\n\n\nR Markdown’da metin içi referanslar yapmanın ve otomatik olarak bir kaynakça oluşturmanın birkaç yolu vardır. Markdown dosyalarının, atıfta bulunmanız gereken referansları içeren bir BibTex veya JSON dosyasına (referansları belirli bir formatta içeren düz bir metin dosyası) bağlanması gerekir. Bu dosyanın adını bibliography: refs.bib gibi YAML başlığında belirtirsiniz ve [@tidyverse] gibi bir @ sembolü ve kısa ad kullanarak metin içinde referanslara atıfta bulunursunuz. Referanslarınızı örneğin APA stilinde biçimlendirmek için bir Citation Style Language (.csl) dosyası da ekleyebilirsiniz.\na bibliography\n---\ntitle: \"My Paper\"\nauthor: \"Me\"\noutput:\n  html_document:\n    toc: true\nbibliography: refs.bib\ncsl: apa.csl\n---\n\n\nEndNote veya Zotero gibi çoğu referans yazılımı BibTeX formatına aktarabilen dışa aktarma seçeneklerine sahiptir. Ortaya çıkan dosyadaki kısa adları kontrol etmeniz yeterlidir.\n\nBir referans programı kullanmak hayatınızı çok daha kolaylaştıracaktır. Zotero muhtemelen en iyisidir.\n\nDışa aktarılan dosya şu şekilde görünmelidir:\n\n@article{kathawalla_easing_2021,\n    title = {Easing {Into} {Open} {Science}: {A} {Guide} for {Graduate} {Students} and {Their} {Advisors}},\n    volume = {7},\n    issn = {2474-7394},\n    shorttitle = {Easing {Into} {Open} {Science}},\n    url = {https://doi.org/10.1525/collabra.18684},\n    doi = {10.1525/collabra.18684},\n    abstract = {This article provides a roadmap to assist graduate students and their advisors to engage in open science practices. We suggest eight open science practices that novice graduate students could begin adopting today. The topics we cover include journal clubs, project workflow, preprints, reproducible code, data sharing, transparent writing, preregistration, and registered reports. To address concerns about not knowing how to engage in open science practices, we provide a difficulty rating of each behavior (easy, medium, difficult), present them in order of suggested adoption, and follow the format of what, why, how, and worries. We give graduate students ideas on how to approach conversations with their advisors/collaborators, ideas on how to integrate open science practices within the graduate school framework, and specific resources on how to engage with each behavior. We emphasize that engaging in open science behaviors need not be an all or nothing approach, but rather graduate students can engage with any number of the behaviors outlined.},\n    number = {1},\n    urldate = {2022-09-07},\n    journal = {Collabra: Psychology},\n    author = {Kathawalla, Ummul-Kiram and Silverstein, Priya and Syed, Moin},\n    month = jan,\n    year = {2021},\n    pages = {18684},\n}\n\n\n\nReferansları manuel olarak da ekleyebilirsiniz. RStudio’da File &gt; New File... &gt; Text File seçeneğine gidin. &gt; Metin Dosyası’na gidin ve dosyayı “refs.bib” olarak kaydedin.\nArdından, YAML başlığınıza bibliography: refs.bib satırını ekleyin.\n\n\n\nBir dergi makalesine aşağıdaki formatta referanslar ekleyebilirsiniz:\n@article{shortname,\n  author = {Author One and Author Two and Author Three},\n  title = {Paper Title},\n  journal = {Journal Title},\n  volume = {vol},\n  number = {issue},\n  pages = {startpage--endpage},\n  year = {year},\n  doi = {doi}\n}\nKitaplara, teknik raporlara ve daha fazlasına atıfta bulunma talimatları için BibTeX formatına ilişkin eksiksiz bir kılavuza bakın.\ncitation() ve toBibtex() fonksiyonlarını kullanarak bir R paketi için referans alabilirsiniz. Bibtex girişini bibliography.bib dosyanıza yapıştırabilirsiniz. Referansa atıfta bulunmak için ilk virgülden önce kısa bir ad (örneğin, “ggplot2”) eklediğinizden emin olun.\nSee A complete guide to the BibTeX format kitaplara, teknik raporlara ve daha fazlasına atıfta bulunma talimatları için.\nBir R paketinin referansını citation() ve toBibtex() fonksiyonlarını kullanarak alabilirsiniz. Bibtex girişini bibliography.bib dosyanıza yapıştırabilirsiniz. Referansa atıfta bulunmak için ilk virgülden önce kısa bir ad (örneğin, “ggplot2”) eklediğinizden emin olun.\n\n\nCode\ncitation(package=\"ggplot2\") %&gt;% toBibtex()\n\n\n@Book{,\n  author = {Hadley Wickham},\n  title = {ggplot2: Elegant Graphics for Data Analysis},\n  publisher = {Springer-Verlag New York},\n  year = {2016},\n  isbn = {978-3-319-24277-4},\n  url = {https://ggplot2.tidyverse.org},\n}\n\n\nGoogle Scholar girişlerinde BibTeX atıf seçeneği vardır. DOI’yi kendiniz eklemeniz gerekse de, Zotero tarayıcı bağlayıcısı aracılığıyla bir atıf ekleyemiyorsanız, ilgili değerleri almanın en kolay yolu genellikle budur. Önerilen kısa adı koruyabilir veya sizin için daha anlamlı olan bir adla değiştirebilirsiniz.\n\n\n\n\n\nGet BibTex citations from Google Scholar.\n\n\n\n\n\n\n\nMetin içinde referansları bu şekilde gösterebilirsiniz:\nThis tutorial uses several R packages [@tidyverse;@rmarkdown].\nBu eğitimde çeşitli R paketleri kullanılmaktadır (Allaire vd., 2018; Wickham, 2017).\n\n\n\nBir öğeyi kaynak göstermeden referans bölümüne eklemek istiyorsanız, bunu YAML başlığına şu şekilde ekleyin:\nnocite: |\n  @kathawalla_easing_2021, @broman2018data, @nordmann2022data\nYa da .bib dosyasındaki tüm öğeleri şu şekilde ekleyin:\nnocite: '@*'\n\n\n\nÇeşitli dergiler için stil dosyalarının bir listesini arayabilir ve kaynakçanızı belirli bir derginin stiline göre biçimlendirecek bir dosya indirebilirsiniz. YAML başlığınıza csl: filename.csl satırını eklemeniz gerekir.\n\nrefs.bib dosyanıza bazı alıntılar ekleyin, metninizde bunlara atıfta bulunun ve otomatik olarak oluşturulan referans bölümünü görmek için makalenizi işleyin. Birkaç farklı atıf stili dosyası deneyin.\n\n\n\n\nVarsayılan olarak, referans bölümü belgenin sonuna eklenir. Konumu değiştirmek istiyorsanız (örneğin, referanslardan sonra şekil ve tablo eklemek için), referansları istediğiniz yere &lt;div id=\"refs\"&gt;&lt;/div&gt; ekleyin.\n\nRaporunuza metin içi alıntılar ve bir referans listesi ekleyin.\n\n\n\n\n\nBazı paketler özel R Markdown şablonları sağlar. reprores, YAML başlığındaki tüm olası seçenekleri gösteren, kaynakça ve stil dosyalarına sahip olan ve bağlantılı şekil ve tabloların nasıl ayarlanacağını açıklayan bir Rapor şablonuna sahiptir. Birden fazla dosya içerdiğinden, RStudio sizden tüm dosyaları tutmak için yeni bir klasör oluşturmanızı isteyecektir.\nÖdevinizi yapmak için aşağdaki kodla reproses pakeini yükleyebilirsiniz.\n\n\nCode\n# devtools::install_github(\"psyteachr/reprores-v3\")\n\n\nDaha sonra aşağıdaki gibi taslağı (template) açabilirsiniz. Örnek dosyayı inceledikten sonra kendi içerieğinizi oluşturabilirsiniz.\n\n\n\n\n\nŞablonlar\n\n\n\n\n\nRapor şablonu ile bir rapor başlatın ve örün. Seçenekleri değiştirmeyi veya silmeyi deneyin.\n\n\n\n\n\nrpubs sayfalarını oluşturup, bu bilgiyi bana ulaştırınız.\nrpubs sayfasında ilk dört haftada öğrendiklerinizin kısa bir özetini paylaşınız.\nAyrıca linkte yer alan çoklu regresyon ile ilgili dökümanı repores paketinin Report şablonu ile oluşturmanızı bekliyorum. Bu dökümana eklenmiş ayrıca bir adet görsel bulunmaktadır. Görsele buradan ulaşabilirsiniz. Bu ödeviniz gönderdiğim dosyaya benzerliğine göre puanlanacaktır.\nnot: şanlonda (templatede) alan YMAL header css: extras/style.css # path to css file kısmını siliniz.\n\n\n\n\n\nChapter 27: R Markdown in R for Data Science\nR Markdown Cheat Sheet\nR Markdown reference Guide\nR Markdown Tutorial\nR Markdown: The Definitive Guide by Yihui Xie, J. J. Allaire, & Garrett Grolemund\nProject Structure by Danielle Navarro\nHow to name files by Jenny Bryan\nPapaja Reproducible APA Manuscripts\nThe Turing Way"
  },
  {
    "objectID": "06_Rmarkdown.html#neden-tekrarlanabilir-raporlar-kullanılmalı",
    "href": "06_Rmarkdown.html#neden-tekrarlanabilir-raporlar-kullanılmalı",
    "title": "Rapor Hazırlama",
    "section": "",
    "text": "Bir rapor hazırladığınızı düşünün\n\niçinde analiz sonuçları olan tablolar\ngrafikler ve görsel olsun\nbu raporu güncellemeniz gerektiğinde veri seti, grafikler, analizler başka dizinlerde olabilir.\nTekrarlanabilir raporlar, tüm analizleri gerçekleştirmek ve tabloları oluşturmak için gereken kodla birlikte rapor metnini tek bir belgede bir araya getirmektir.\nBu, başlangıçta biraz fazladan çaba gerektirse de, herhangi bir değişiklik olduğunda tek bir düğmeye basarak tüm raporunuzu güncellemenizi sağlayarak size fazlasıyla geri ödeme yapacaktır.\nAraştırmalar ayrıca, bilimsel literatürdeki makalelerin çoğunda olmasa bile birçoğunda raporlama hataları olduğunu göstermektedir. Tekrarlanabilir raporlar, transkripsiyon ve yuvarlama hatalarını önlemeye yardımcı olur.\nRapor daha sonra orijinal formattan HTML, word ve ya PDF gibi daha taşınabilir başka bir formata “derlenir”. Bu, örneğin Microsoft Excel’de veya SPSS gibi bir istatistik programında bir grafik oluşturup ardından bunu Microsoft Word’e yapıştırdığınız geleneksel kesme ve yapıştırma yaklaşımlarından farklıdır."
  },
  {
    "objectID": "06_Rmarkdown.html#bir-proje-düzenlemek",
    "href": "06_Rmarkdown.html#bir-proje-düzenlemek",
    "title": "Rapor Hazırlama",
    "section": "",
    "text": "İlk olarak, organize olmamız gerekiyor. RStudio’daki projeler, bir proje için ihtiyaç duyduğunuz tüm dosyaları gruplandırmanın bir yoludur. Çoğu proje komut dosyalarını, veri dosyalarını ve komut dosyası veya görüntüler tarafından oluşturulan PDF raporu gibi çıktı dosyalarını içerir.\n\n\n\n\nBilgisayarınızın dosya sistemi, hem dosyaları hem de “alt dizinleri” içeren büyük dizin gibidir. Bir dosyanın konumunu adıyla ve içinde bulunduğu tüm dizinlerin adlarıyla belirtebilirsiniz.\nÖrneğin, Kubra Masaüstünde report.Rmd adında bir dosya arıyorsa, tam dosya yolunu şu şekilde belirtebilir: /Users/Kubra/Desktop/report.Rmd , çünkü Masaüstü dizini, tüm dosya sisteminin tabanında bulunan Kullanıcılar/Users dizininin içindeki Kubra dizininin içindedir. Bu dosya masaüstünüzde olsaydı, kullanıcı dizininizin adı da Kubra değilse muhtemelen farklı bir yola sahip olurdunuz. Şu anda oturum açmış olan kişinin kullanıcı dizinini temsil etmek için ~ kısayolunu da kullanabilirsiniz: ~/Desktop/report.Rmd.\n\n\n\n\n\nTüm dosyalarınızı nereye koymalısınız? Genellikle tek bir proje için tüm komut dosyalarınızın ve veri dosyalarınızın bilgisayarınızdaki tek bir klasörde, o projenin çalışma dizininde olmasını istersiniz. Dosyaları bu ana proje dizini içindeki alt dizinlerde düzenleyebilirsiniz, örneğin tüm ham veri dosyalarını data/import adlı bir dizine koyabilir ve tüm görüntü dosyalarını images adlı bir dizine kaydedebilirsiniz.\nKodunuz, uygun biçimi kullanarak yalnızca üç tür konumdaki dosyalar kullanılmalıdır.\n\n\n\n\nYer\nÖrnek\n\n\n\n\nweb\n“https://atalay-k.github.io/OLC731/import/veri1.txt”\n\n\ndizin içinde\n“veri1.txt”\n\n\nalt dizin içinde\n“import/veri1.txt”\n\n\n\n\nBir komut dosyasında asla çalışma dizininizi ayarlamayın veya değiştirmeyin.\n\n\nR Markdown dosyaları otomatik olarak .Rmd dosyasının bulunduğu dizini çalışma dizini olarak kullanacaktır.\nKodunuz çalışma dizininizin bir alt dizinindeki bir dosyaya ihtiyaç duyuyorsa (örneğin, import/veri1.txt), çalışma dizinini başka bir konuma veya bilgisayara taşıdığınızda erişilebilir olması için dosyayı göreli bir yol kullanarak yükleyin:\n\n\n\nCode\ndat &lt;- read.table(\"import/veri1.txt\")  # dogru\n\n\nBu dosyayı aşağıdaki gibi mutlak yol/adres ile yüklemeyin:\n\n\nCode\ndat &lt;- read.table(\"c:/Users/Kubra/Desktop/OLC731/import/veri1.txt\")  # yanlıs\n\n\n\nÖrnek veriyi düzgün aktarmak aşağıdaki kodla sağlanır.\n\n\n\nCode\n(veri1 &lt;- read.table(\"import/veri1.txt\",\n                    header= TRUE,\n                    sep= \";\",\n                    dec= \",\"))\n\n\n   no m_1  m_2 m_3  m_4 m_5\n1 522  12 14.0  16 20.0  10\n2 222   5   NA  20 10.0  10\n3 454   5 10.2   6  4.0  10\n4 567  10 20.0  NA 12.2  20\n\n\n\nAyrıca, Windows’a özgü geriye doğru eğik çizgi kullanma kuralının aksine, ileriye doğru eğik çizgi kullanma kuralına dikkat edin. Bu, dosyalara yapılan referansların işletim sistemlerinden bağımsız olarak herkes için çalışmasını sağlamak içindir.\n\n\n\n\nDosyaları, hem insanların hem de bilgisayarların kolayca bulabileceği şekilde adlandırın. İşte bazı önemli ilkeler:\n\ndosya ve dizin adları yalnızca harf, rakam, tire ve alt çizgi içermeli, dosya adı ve uzantısı arasında nokta (.) olmalıdır (bu boşluk olmadığı anlamına gelir!)\nBüyük harf kullanımı konusunda tutarlı olun (hatırlamayı kolaylaştırmak için bir kural belirleyin, örneğin her zaman küçük harf kullanın)\ndosya adının bölümlerini ayırmak için alt çizgi (_) ve bir bölümdeki sözcükleri ayırmak için tire (-) kullanın\ndosyaları mantıklı bir sırayla alfabetik hale getiren ve aradığınız dosyayı bulmanızı kolaylaştıran bir kalıpla adlandırın\nbir dosya adını listenin en üstüne taşımak için önüne alt çizgi ekleyin veya sıralarını kontrol etmek için tüm dosyaların önüne sayı ekleyin\ntarihler için YYYY-MM-DD biçimini kullanın, böylece kronolojik sıraya göre sıralanırlar\n\nÖrneğin, bu dosya adları tam bir karmaşa:\n\nVeri (Katilimci) 04-15.xls\nfinal raporu2.doc\nKatilimci Veri Nisan 12.xls\n(\"proje notlari\nAnket Veri Kasim 15.xls\nrapor.doc\nrapor son.doc\n\nBenzer dosyaların aynı yapıya sahip olması ve dosyaları taramanın veya ilgili dosyaları bulmak için kod kullanmasının kolay olması için dosyaları yapılandırabilirsiniz.\n\nproje-notlari\nveri_katilimci_2021-04-12.xls\nveri_katilimci_2021-04-15.xls\nveri_anket_2021-04-15.xls\nrapor_v1.doc\nrapor_v2.doc\nrapor_v3.doc\n\n\nYukarıdaki dosyaları adlandırmak için başka yollar düşünün. Kendi proje dosyalarınızdan bazılarına bakın ve neleri geliştirebileceğinizi görün.\n\n\n\n\n\nArtık dosya sisteminin nasıl çalıştığını ve komut dosyalarının bunlara erişmesini kolaylaştırmak için nesneleri nasıl adlandıracağımızı anladığımıza göre, projemizi yapmaya hazırız.\nÖncelikle, bu sınıf için tüm materyallerinizi tutacağınız yeni bir dizin oluşturun (benimki Ranaliz adınında). Bu dizini Global Options’ın general bölümü altında varsayılan çalışma dizini olarak ayarlayabilirsiniz. Bu, bir projede çalışmıyorsanız dosyaların varsayılan olarak buraya kaydedileceği anlamına gelir.\n\n\nBu dizin OneDrive’daysa veya tam dosya yolu özel karakterler içeriyorsa ya da bazı Windows makinelerinde 260 karakterden fazlaysa bazen sorunlara neden olabilir.\n\n\nArdından, OLC731_2023 adında yeni bir proje oluşturmak için File menüsü altında New Project... öğesini seçin. Yeni oluşturduğunuz dizinin içine kaydettiğinizden emin olun. RStudio kendini yeniden başlatacak ve çalışma dizini olarak bu yeni proje dizini ile açılacaktır.\n\nProje dizininin içeriğini görmek için sağ alt bölmedeki Files sekmesine tıklayın. Tüm proje bilgilerini içeren Ranaliz.Rproj adlı bir dosya göreceksiniz, projeyi açmak için üzerine çift tıklayabilirsiniz.\n\nAyarlarınıza bağlı olarak, özel kullanıcı ayarlarınızı içeren .Rproj.user adlı bir dizin de görebilirsiniz. Bu ve nokta ile başlayan diğer “görünmez” dosyaları yok sayabilirsiniz."
  },
  {
    "objectID": "06_Rmarkdown.html#r-markdown",
    "href": "06_Rmarkdown.html#r-markdown",
    "title": "Rapor Hazırlama",
    "section": "",
    "text": "Bu derste, bir içindekiler tablosu, uygun başlıklar, kod parçaları, tablolar, resimler, satır içi R ve bir kaynakça içeren bir R Markdown belgesi oluşturmayı öğreneceğiz.\n\n\nR Markdown’a çok benzeyen quarto adında yeni bir tür tekrarlanabilir rapor formatı var. Bu derste quarto kullanmayacağız çünkü aynı anda hem quarto hem de R Markdown öğreniyorsanız kafa karıştırıcı olabilecek birkaç küçük farkı var, ancak R Markdown’ı öğrendikten sonra quarto’yu çok kolay bir şekilde öğrenebilirsiniz.\n\n\nTekrar üretilebilir raporlar oluşturmak için metin ve kodun karıştırılmasını sağlayan R Markdown kullanacağız. Yeniden üretilebilir bir komut dosyası, kod bloklarında kod bölümleri içerecektir. Bir kod bloğu arka arkaya üç backtick sembolü ile başlar ve biter, küme parantezleri arasında kod hakkında bazı bilgiler bulunur, örneğin {r chunk-name, echo=FALSE} (bu kodu çalıştırır, ancak derlenen belgede kod bloğunun metnini göstermez). Kod bloklarının dışındaki metin, başlıklar, paragraflar, listeler, kalınlaştırma ve bağlantılar gibi biçimlendirmeyi belirtmenin bir yolu olan markdown ile yazılır. Örnek Dosyayı beraber inceleyelim.\nBir şablondan yeni bir R Markdown dosyası açarsanız, içinde birkaç kod bloğu bulunan örnek bir belge görürsünüz. Bir R Markdown (Rmd) belgesinden HTML veya PDF raporu oluşturmak için belgeyi derlersiniz. Bir belgeyi derlemeye RStudio’da örme denir. Dosyanızı bir rapora derlemek için üzerine tıkladığınız, içinden iğneler geçen bir iplik yumağına benzeyen bir düğme vardır.\n\n\nFile &gt; New File &gt; R Markdown... menüsünden yeni bir R Markdown dosyası oluşturun. Başlığı ve yazarı değiştirin, dosyayı Ornek1.Rmd olarak kaydedin, ardından bir html dosyası oluşturmak için ör düğmesine tıklayın.\n\n\n\n\n🔗 YAML başlığı çeşitli seçenekleri ayarlayabileceğiniz bölümdür.\n\n---\ntitle: \"Demo\"\nauthor: \"Kubra\"\noutput:\n  html_document:\n    toc: true\n    toc_float:\n      collapsed: false\n      smooth_scroll: false\n      number_sections: false\n---\n\nSeçeneklerin ne işe yaradığını görmek için değerleri false tan true ya değiştirmeyi deneyin.\n\n\nVarsayılan temalar şunlardır: default, cerulean, cosmo, darkly, flatly, journal, lumen, paper, readable, sandstone, simplex, spacelab, united ve yeti. Linkten 🔗daha fazla temayı inceleyebilirsiniz..\n\n\n\n\n\nVarsayılan şablonu kullanarak RStudio’da yeni bir R Markdown dosyası oluşturduğunuzda, otomatik olarak bir kurulum blogu oluşturulur.\n\n\n\nCode\nknitr::opts_chunk$set(echo = TRUE)\n\n\n\nKod parçaları için daha fazla varsayılan seçeneği buradan ayarlayabilirsiniz. Olası seçeneklerin açıklamaları için knitr seçenekleri belgelerine bakın. knitr dokumanı\n\n\n\nCode\nknitr::opts_chunk$set(\n  fig.width  = 8,\n  fig.height = 5,\n  fig.path   = 'images/',\n  echo       = FALSE,\n  warning    = TRUE,\n  message    = FALSE,\n  cache      = FALSE\n)\n\n\nYukarıdaki kod aşağıdaki seçenekleri ayarlar:\n\nfig.width = 8 : varsayılan şekil genişliği 8 inçtir (bunu tek tek şekiller için değiştirebilirsiniz)\nfig.height = 5 : varsayılan şekil yüksekliği 5 inçtir\nfig.path = ‘images/’ : şekiller “images” dizinine kaydedilir\necho = FALSE : işlenen belgede kod parçalarını gösterme\nwarning = FALSE : herhangi bir işlev uyarısı gösterme\nmessage = FALSE : herhangi bir işlev mesajı gösterme\ncache = FALSE : her örgü ördüğünüzde tüm görüntüleri ve nesneleri oluşturmak için tüm kodu çalıştırın (zaman alıcı kodunuz varsa TRUE olarak ayarlayın) Konsola (str(knitr::opts_chunk$get())) yazarak geçerli kod bloğu seçeneklerinin bir listesini bulun.\n\nİhtiyacınız olan paketleri (library())kullanarak da bu bloğunuza ekleyebilirsiniz. Genellikle bir komut dosyası üzerinde çalışırken, başka bir eklenti paketi yüklemeniz gerektiğini fark edersiniz. library(...) çağrısını kodun en altına gömmeyin. En üste koyun, böylece kullanıcı hangi paketlerin gerekli olduğuna dair genel bir fikir elde edilir.\n\ntidyverse paketinden fonksiyon kullanacağız, bu yüzden kurulum bloğunuza yükleyin.\n\n\n\n\n\nBir içindekiler tablosu (toc) eklerseniz, bu tablo belge başlıklarınızdan oluşturulur. Markdown’daki başlıklar, başlık başlığının önüne bir veya daha fazla hash (#) eklenerek oluşturulur.\nKendi analiz komut dosyalarınızı geliştirirken aşağıdaki yapıyı kullanın:\nKullanmanız gereken tüm eklenti paketlerini yükleyin\nherhangi bir özel fonksiyon tanımlayın\nbirlikte çalışacağınız verileri yükleyin veya simüle edin\nkaydetmeniz gereken her şeyi kaydedin\n\n\nVarsayılan metni silin ve başlıklar ve alt başlıklar oluşturarak belgenize biraz yapı ekleyin. Bazı verileri yükleyeceğiz, bir özet tablo oluşturacağız, verileri çizeceğiz ve analiz edeceğiz.\n\n\n\n\n\nMetninize eklemek için görüntüler, tablolar veya hesaplamalar oluşturan ve görüntüleyen kod parçaları ekleyebilirsiniz. Bazı verileri yükleyerek başlayalım.\nİlk olarak, belgenizde bir kod bloğu oluşturun. Bu kod iris veri setini yükler.\n\n\n\nCode\nlibrary(datasets)\ndata(iris)\n\n\n\n\n\n\nKod blokları içine hash sembolü (#) ile yorum ekleyebilirsiniz. R yorumlayıcısı, hash’ten satır sonuna kadar olan karakterleri yoksayacaktır.\n\n\n\nCode\nn &lt;- nrow(iris) # toplam satır sayısı\nmu &lt;- mean(iris$Petal.Length)  # taç yaprak uzunluğu ortalaması\nsd &lt;- sd(iris$Petal.Length) # taç yaprak uzunluğu standart sapması\n\n\nsimule_deger &lt;- rnorm(n, mu, sd)\n\n\n\nBir kod parçasını, özellikle kod rapor metninde açıklanmamışsa, orada ne yaptığınızı açıklayan bir yorumla başlatmak genellikle iyi bir uygulamadır.\nNesnelerinizi açık bir şekilde adlandırırsanız, genellikle açıklayıcı yorumlar eklemeniz gerekmez. Örneğin, yukarıdaki üç nesneyi n_iris, ort_petal ve sd_petal olarak adlandırmış olsaydım, yorumları atlardım.\nYorumların bir başka kullanımı da çalıştırmak istemediğiniz ancak silmek de istemediğiniz bir kod bölümünü “yorumlamaktır”. Örneğin, bir paketi yüklemek için kullanılan kodu kodunuza dahil edebilirsiniz, ancak kodun her çalıştırıldığında uzun bir yüklemeye zorlamaması için her zaman yorumlamanız gerekir.\n\n\n\nCode\n# install.packages(\"dplyr\")\n# install.packages(\"tidyr\")\n# install.packages(\"ggplot2\")\n\n\n\nSatırları seçip Cmd-shift-C (Mac) veya Ctrl-shift-C (Windows) yazarak aynı anda birden fazla satıra yorum yazabilir veya yorumu kaldırabilirsiniz.\n\n\nKodunuzu iyi bir şekilde yorumlamak biraz sanattır. Bu beceriyi geliştirmenin en iyi yolu, başkalarının kodlarını okumak ve başkalarının kodunuzu incelemesini sağlamaktır.\n\n\n\n\n\nŞimdi setosa ve virginica çiçek türlerinde yaprak uzunluklarını analiz edelim. Önce analiz kodunu çalıştıracağız. Daha sonra makalemizde kullanmak isteyebileceğimiz sayıları değişkenlere kaydedeceğiz ve uygun şekilde yuvarlayacağız. Son olarak, bir sonuçları biçimlendirmek için glue::glue() kullanacağız.\n\n\n\nCode\n# analiz\nlibrary(dplyr)\nsetosa_petal &lt;- filter(iris, Species == \"setosa\") %&gt;% pull(Petal.Length)\nvirginica_petal &lt;- filter(iris, Species == \"virginica\") %&gt;% pull(Petal.Length)\npetal_test &lt;- t.test(setosa_petal, virginica_petal)\n\n# rapor edilecek degerleri yorumlama\nt &lt;- petal_test$statistic %&gt;% round(2)\ndf &lt;- petal_test$parameter %&gt;% round(1)\np &lt;- petal_test$p.value %&gt;% round(3)\n# handle p-values &lt; .001\np_symbol &lt;- ifelse(p &lt; .001, \"&lt;\", \"=\")\nif (p &lt; .001) p &lt;- .001\n\n# sonucları birleştirme\npetal_result &lt;- glue::glue(\"t = {t}, df = {df}, p {p_symbol} {p}\")\n\n\n\nSonuçları, aşağıdaki gibi görünen satır içi R kodu ile bir paragrafa ekleyebilirsiniz:\n\n virginica çiçeklerinin yaprakları setosa çiçeklerinin yapraklarından uzundur(`r petal_result`).\nvirginica çiçeklerinin yaprakları setosa çiçeklerinin yapraklarından uzundur (t = -49.99, df = 58.6, p &lt; 0.001).\n\n\n\n\nÇalışmaların yöntem bölümüne betimsel bilgiler eklemek istediğimizde\n\n\n\nCode\nozet_tablo &lt;- iris %&gt;%\n  group_by(Species) %&gt;%\n  summarise(\n    n = n(),\n    ortalama = mean(Petal.Length),\n    sd = sd(Petal.Length)\n  )\nozet_tablo\n\n\n# A tibble: 3 × 4\n  Species        n ortalama    sd\n  &lt;fct&gt;      &lt;int&gt;    &lt;dbl&gt; &lt;dbl&gt;\n1 setosa        50     1.46 0.174\n2 versicolor    50     4.26 0.470\n3 virginica     50     5.55 0.552\n\n\n\nYukarıdaki tablo etkileşimli görünümde tibble biçiminde yazdırılacak, ancak ördüğünüzde YAML başlığındaki df_print ayarındaki biçimi kullanacaktır.\n\n\nYukarıdaki tabloda, sütun etiketlerini değiştirerek, ortalamaları yuvarlayarak ve bir başlık ekleyerek daha okuyucu dostu hale getirlebilir. Bunun için (knitr::kable()) işlevini veya tablolarınızı biçimlendirmek için diğer paketlerdeki daha özel işlevleri kullanabilirsiniz.\n\n\nknitrkableExtrapapajagt\n\n\n\n\nCode\nyeni_ad &lt;- c(\"Çiçek Türü\", \"Frekans\", \"Ortalama\", \"Sd\")\n\nknitr::kable(ozet_tablo,\n             digits = 2,\n             col.names = yeni_ad,\n             caption = \"Petal Uzulukları için Özet Tablo\")\n\n\n\nPetal Uzulukları için Özet Tablo\n\n\nÇiçek Türü\nFrekans\nOrtalama\nSd\n\n\n\n\nsetosa\n50\n1.46\n0.17\n\n\nversicolor\n50\n4.26\n0.47\n\n\nvirginica\n50\n5.55\n0.55\n\n\n\n\n\n\n\nkableExtra paketi çok sayıda seçenek sunar.\n\n\nCode\nlibrary(kableExtra)\n\nkable(ozet_tablo,\n      digits = 2,\n      col.names = c(\"Çiçek Türü\", \"Frekans\", \"Ortalama\", \"Sd\"),\n      caption = \"Petal Uzulukları için Özet Tablo\") |&gt;\n  kable_classic() |&gt;\n  kable_styling(full_width = FALSE, font_size = 20) |&gt;\n  add_header_above(c(\" \" = 2, \"Degerler\" = 2)) |&gt;\n  kableExtra::row_spec(2, bold = TRUE, background = \"lightgrey\")\n\n\n\n\nPetal Uzulukları için Özet Tablo\n\n\n\n\n\n\n\n\n\n\nDegerler\n\n\n\nÇiçek Türü\nFrekans\nOrtalama\nSd\n\n\n\n\nsetosa\n50\n1.46\n0.17\n\n\nversicolor\n50\n4.26\n0.47\n\n\nvirginica\n50\n5.55\n0.55\n\n\n\n\n\n\n\n\n\n\npapaja paketi ile APA formatında tablolar elde edebilirsiniz.\n\n\nCode\npapaja::apa_table(ozet_tablo,\n                  col.names = c(\"Çiçek Türü\", \"Frekans\", \"Ortalama\", \"Sd\"),\n                  caption = \"Petal Uzulukları için Özet Tablo\",\n                  col_spanners = list(\"Means\" = c(3, 4)))\n\n\n\n(#tab:papaja-demo) Petal Uzulukları için Özet Tablo\n\n\nÇiçek Türü\nFrekans\nOrtalama\nSd\n\n\n\n\nsetosa\n50\n1.46\n0.17\n\n\nversicolor\n50\n4.26\n0.47\n\n\nvirginica\n50\n5.55\n0.55\n\n\n\n\n\n\n\ngt paketinde de çok sayıda seçenek bulunmaktadır.\n\n\nCode\nlibrary(gt)\n\ngt(ozet_tablo, caption = \"Petal Uzulukları için Özet Tablo\") |&gt;\n  fmt_number(columns = c(ortalama, sd),\n             decimals = 2) |&gt;\n  cols_label(Species = \"Çiçek Türü\",\n             n = \"Frekans\",\n             ortalama = \"ortalama\",\n             sd = \"sd\") |&gt;\n  tab_spanner(label = \"Degerler\",\n              columns = c(ortalama, sd)) |&gt;\n  opt_stylize(style = 6, color = \"blue\")\n\n\n\n\n\n\n\nPetal Uzulukları için Özet Tablo\n\n\nÇiçek Türü\nFrekans\nDegerler\n\n\nortalama\nsd\n\n\n\n\nsetosa\n50\n1.46\n0.17\n\n\nversicolor\n50\n4.26\n0.47\n\n\nvirginica\n50\n5.55\n0.55\n\n\n\n\n\n\n\n\n\n\n\n\n\nTablo eklemek için diğer bir yol ise elle tablo oluşturmaktadır. Tablo oluşturulmak istendiğinde aşağıdaki şekilde eklenebilir.\n\n\nCode\n| col1   |col2    |  \n|:------:|:------:|\n|içerik1 |içerik2 |\n\n\nYukarıdaki içerik örüldüğünde aşağıdaki tablo oluşmaktadır.\n\n\n\ncol1\ncol2\n\n\n\n\niçerik1\niçerik2\n\n\n\nTablo eklemek için Rstudio yer alan Visual özelliğini kullanmakta pratiktir. Hazırladığınız markdown dosyasını Visual modunda açtığınızda Table menüsünde tablo oluşturma, satır sütun ekleme, hizalama gibi işlemler menü aracılığı ile yapılabilimektedir.\n\n\n\n\n\nŞekil başlığının kod bloğında nasıl biçimlendirildiğine dikkat edin.\n\n\n\nCode\ndat &lt;- subset(iris, Species != \"versicolor\")\ndat$Species &lt;- factor(dat$Species)\n\nggplot(dat, aes(Species, Petal.Length)) +\n  geom_boxplot(width = 0.25,\n               show.legend = FALSE)  +\n  labs(x = \"\", y = \"Petal Uzunluğu\") +\n  theme(text = element_text(size = 20, family = \"Times\"))\n\n\n\n\n\nPetal Uzunlukları ve Türler\n\n\n\n\n\n\n\n\n\nPetal Uzunlukları ve Türler\n\n\n\n\n\nSon satır varsayılan metin boyutunu ve yazı tipini değiştirir, bu da bir derginin gereksinimlerini karşılayan şekiller oluşturmak için yararlı olabilir.\n\n\nKodlarla oluşturamadığınız şekilleri de resim dosyaları ile dökümana ekleyebilirsiniz:\n\n![neden R](https://miro.medium.com/v2/resize:fit:720/format:webp/1*TX77o_zJ4zbpJ3vN4BkLsg.jpeg){style=\"width: 50%\"}\n\n\n\nneden R\n\n\n\n\n\n\nMarkdown bölümler arasında bağlantılar içeren daha uzun raporlar oluşturmanıza yardımcı olur.\nBaşlığı olan tüm şekillere veya tablolara otomatik olarak şekil ve tablo numaraları ekler ve bunlara referansla bağlantı vermenize olanak sağlar.\nTablolara ve şekillere bağlantılar oluşturmak için, şekillerinizi veya tablolarınızı oluşturan kod bloklarınız adlandırmanız ve ardından satır içi kodlamanızda bu adları çağırmanız gerekir:\n\n\n\nCode\n# kodlar\n\n\n\n\nCode\n# kodlar\n\n\nBakınız Tablo\\ \\@ref(tab:tablo1) or Sekil\\ \\@ref(fig:sekil1).\n\nKod blok adları yalnızca harf, rakam ve tire içerebilir. Boşluk veya alt çizgi gibi başka karakterler içeriyorlarsa, referanslama çalışmayacaktır.\n\nBaşlıklarınızı {#} ile adlandırarak da raporunuzun farklı bölümlerine bağlantı verebilirsiniz:\n# Baslık 1 {#baslık-1}\n\n## Baslık 2 {#baslık-2}\n\nBakınız Bolum\\ \\@ref(baslık-1) and Bolum\\ \\@ref(baslık-2)\n\nAşağıdaki kod, ggplot2 paketindeki diamonds veri seti kullanarak tam bir raporda metnin şekillere veya tablolara nasıl bağlanacağını göstermektedir - bu belgeyi şimdi oluşturmak için aşağıdaki kodları kullanın.\n\n# ORNEK DOSYA\n\n```{r setup, include=FALSE}\nknitr::opts_chunk$set(echo = FALSE,\n                      message = FALSE,\n                      warning = FALSE)\nlibrary(tidyverse)\nlibrary(kableExtra)\ntheme_set(theme_minimal())\n```\n\nPırlanta ücretleri çeşitli faktörlere bağlıdır\n\n-   cut (Bakınız Tablo \\@ref(tab:kesim))\n-   colour (Bakınız Tablo \\@ref(tab:renk))\n-   clarity (Bakınız Şekil \\@ref(fig:parlaklik))\n-   carats (Bakınız Şekil \\@ref(fig:karat))\n-   Bakınız Bolum \\@ref(sonuclar) sonuclar icin\n\n## Tablolar\n\n### Kesim\n\n```{r kesim}\ndiamonds %&gt;%\n  group_by(cut) %&gt;%\n  summarise(avg = mean(price),\n            .groups = \"drop\") %&gt;%\n  kable(digits = 0, \n        col.names = c(\"Cut\", \"Average Price\"),\n        caption = \"Kesime göre ortalama pırlanta fiyatı.\") %&gt;%\n  kable_material()\n```\n\n### Renk\n\n```{r renk}\ndiamonds %&gt;%\n  group_by(color) %&gt;%\n  summarise(avg = mean(price),\n            .groups = \"drop\") %&gt;%\n  kable(digits = 0, \n        col.names = c(\"Cut\", \"Average Price\"),\n        caption = \"Renge göre ortalama pırlanta fiyatı.\") %&gt;%\n  kable_material()\n```\n\n## Grafikler\n\n### Parlaklık\n\n```{r parlaklik, fig.cap = \"Parlaklığa göre pırlanta fiyatı\"}\nggplot(diamonds, aes(x = clarity, y = price)) +\n  geom_boxplot() \n```\n\n### Karat\n\n```{r karat, fig.cap = \"Karata göre pırlanta fiyatı\"}\nggplot(diamonds, aes(x = carat, y = price)) +\n  stat_smooth()\n```\n\n### Sonuclar {#sonuclar}\n\n\"Kodlar haricinde pırlantalarla ilgilenmiyorum :) \"\nBu format varsayılan olarak numaralandırılmış bölümler bulunuyor, numaralandırma bunu istemiyorsanız YAML bölümünde number_sections: false ayarını yapın. Numaralandırılmış bölümleri kaldırırsanız, \\@ref(sonuclar) gibi bağlantılar “??” gösterecektir, bu nedenle bunun yerine aşağıdaki gibi URL bağlantı adresi kullanmanız gerekir:\nSon açıklamalar için son bölüme bakınız."
  },
  {
    "objectID": "06_Rmarkdown.html#kaynakça",
    "href": "06_Rmarkdown.html#kaynakça",
    "title": "Rapor Hazırlama",
    "section": "",
    "text": "R Markdown’da metin içi referanslar yapmanın ve otomatik olarak bir kaynakça oluşturmanın birkaç yolu vardır. Markdown dosyalarının, atıfta bulunmanız gereken referansları içeren bir BibTex veya JSON dosyasına (referansları belirli bir formatta içeren düz bir metin dosyası) bağlanması gerekir. Bu dosyanın adını bibliography: refs.bib gibi YAML başlığında belirtirsiniz ve [@tidyverse] gibi bir @ sembolü ve kısa ad kullanarak metin içinde referanslara atıfta bulunursunuz. Referanslarınızı örneğin APA stilinde biçimlendirmek için bir Citation Style Language (.csl) dosyası da ekleyebilirsiniz.\na bibliography\n---\ntitle: \"My Paper\"\nauthor: \"Me\"\noutput:\n  html_document:\n    toc: true\nbibliography: refs.bib\ncsl: apa.csl\n---\n\n\nEndNote veya Zotero gibi çoğu referans yazılımı BibTeX formatına aktarabilen dışa aktarma seçeneklerine sahiptir. Ortaya çıkan dosyadaki kısa adları kontrol etmeniz yeterlidir.\n\nBir referans programı kullanmak hayatınızı çok daha kolaylaştıracaktır. Zotero muhtemelen en iyisidir.\n\nDışa aktarılan dosya şu şekilde görünmelidir:\n\n@article{kathawalla_easing_2021,\n    title = {Easing {Into} {Open} {Science}: {A} {Guide} for {Graduate} {Students} and {Their} {Advisors}},\n    volume = {7},\n    issn = {2474-7394},\n    shorttitle = {Easing {Into} {Open} {Science}},\n    url = {https://doi.org/10.1525/collabra.18684},\n    doi = {10.1525/collabra.18684},\n    abstract = {This article provides a roadmap to assist graduate students and their advisors to engage in open science practices. We suggest eight open science practices that novice graduate students could begin adopting today. The topics we cover include journal clubs, project workflow, preprints, reproducible code, data sharing, transparent writing, preregistration, and registered reports. To address concerns about not knowing how to engage in open science practices, we provide a difficulty rating of each behavior (easy, medium, difficult), present them in order of suggested adoption, and follow the format of what, why, how, and worries. We give graduate students ideas on how to approach conversations with their advisors/collaborators, ideas on how to integrate open science practices within the graduate school framework, and specific resources on how to engage with each behavior. We emphasize that engaging in open science behaviors need not be an all or nothing approach, but rather graduate students can engage with any number of the behaviors outlined.},\n    number = {1},\n    urldate = {2022-09-07},\n    journal = {Collabra: Psychology},\n    author = {Kathawalla, Ummul-Kiram and Silverstein, Priya and Syed, Moin},\n    month = jan,\n    year = {2021},\n    pages = {18684},\n}\n\n\n\nReferansları manuel olarak da ekleyebilirsiniz. RStudio’da File &gt; New File... &gt; Text File seçeneğine gidin. &gt; Metin Dosyası’na gidin ve dosyayı “refs.bib” olarak kaydedin.\nArdından, YAML başlığınıza bibliography: refs.bib satırını ekleyin.\n\n\n\nBir dergi makalesine aşağıdaki formatta referanslar ekleyebilirsiniz:\n@article{shortname,\n  author = {Author One and Author Two and Author Three},\n  title = {Paper Title},\n  journal = {Journal Title},\n  volume = {vol},\n  number = {issue},\n  pages = {startpage--endpage},\n  year = {year},\n  doi = {doi}\n}\nKitaplara, teknik raporlara ve daha fazlasına atıfta bulunma talimatları için BibTeX formatına ilişkin eksiksiz bir kılavuza bakın.\ncitation() ve toBibtex() fonksiyonlarını kullanarak bir R paketi için referans alabilirsiniz. Bibtex girişini bibliography.bib dosyanıza yapıştırabilirsiniz. Referansa atıfta bulunmak için ilk virgülden önce kısa bir ad (örneğin, “ggplot2”) eklediğinizden emin olun.\nSee A complete guide to the BibTeX format kitaplara, teknik raporlara ve daha fazlasına atıfta bulunma talimatları için.\nBir R paketinin referansını citation() ve toBibtex() fonksiyonlarını kullanarak alabilirsiniz. Bibtex girişini bibliography.bib dosyanıza yapıştırabilirsiniz. Referansa atıfta bulunmak için ilk virgülden önce kısa bir ad (örneğin, “ggplot2”) eklediğinizden emin olun.\n\n\nCode\ncitation(package=\"ggplot2\") %&gt;% toBibtex()\n\n\n@Book{,\n  author = {Hadley Wickham},\n  title = {ggplot2: Elegant Graphics for Data Analysis},\n  publisher = {Springer-Verlag New York},\n  year = {2016},\n  isbn = {978-3-319-24277-4},\n  url = {https://ggplot2.tidyverse.org},\n}\n\n\nGoogle Scholar girişlerinde BibTeX atıf seçeneği vardır. DOI’yi kendiniz eklemeniz gerekse de, Zotero tarayıcı bağlayıcısı aracılığıyla bir atıf ekleyemiyorsanız, ilgili değerleri almanın en kolay yolu genellikle budur. Önerilen kısa adı koruyabilir veya sizin için daha anlamlı olan bir adla değiştirebilirsiniz.\n\n\n\n\n\nGet BibTex citations from Google Scholar.\n\n\n\n\n\n\n\nMetin içinde referansları bu şekilde gösterebilirsiniz:\nThis tutorial uses several R packages [@tidyverse;@rmarkdown].\nBu eğitimde çeşitli R paketleri kullanılmaktadır (Allaire vd., 2018; Wickham, 2017).\n\n\n\nBir öğeyi kaynak göstermeden referans bölümüne eklemek istiyorsanız, bunu YAML başlığına şu şekilde ekleyin:\nnocite: |\n  @kathawalla_easing_2021, @broman2018data, @nordmann2022data\nYa da .bib dosyasındaki tüm öğeleri şu şekilde ekleyin:\nnocite: '@*'\n\n\n\nÇeşitli dergiler için stil dosyalarının bir listesini arayabilir ve kaynakçanızı belirli bir derginin stiline göre biçimlendirecek bir dosya indirebilirsiniz. YAML başlığınıza csl: filename.csl satırını eklemeniz gerekir.\n\nrefs.bib dosyanıza bazı alıntılar ekleyin, metninizde bunlara atıfta bulunun ve otomatik olarak oluşturulan referans bölümünü görmek için makalenizi işleyin. Birkaç farklı atıf stili dosyası deneyin.\n\n\n\n\nVarsayılan olarak, referans bölümü belgenin sonuna eklenir. Konumu değiştirmek istiyorsanız (örneğin, referanslardan sonra şekil ve tablo eklemek için), referansları istediğiniz yere &lt;div id=\"refs\"&gt;&lt;/div&gt; ekleyin.\n\nRaporunuza metin içi alıntılar ve bir referans listesi ekleyin."
  },
  {
    "objectID": "06_Rmarkdown.html#özel-şablonlar",
    "href": "06_Rmarkdown.html#özel-şablonlar",
    "title": "Rapor Hazırlama",
    "section": "",
    "text": "Bazı paketler özel R Markdown şablonları sağlar. reprores, YAML başlığındaki tüm olası seçenekleri gösteren, kaynakça ve stil dosyalarına sahip olan ve bağlantılı şekil ve tabloların nasıl ayarlanacağını açıklayan bir Rapor şablonuna sahiptir. Birden fazla dosya içerdiğinden, RStudio sizden tüm dosyaları tutmak için yeni bir klasör oluşturmanızı isteyecektir.\nÖdevinizi yapmak için aşağdaki kodla reproses pakeini yükleyebilirsiniz.\n\n\nCode\n# devtools::install_github(\"psyteachr/reprores-v3\")\n\n\nDaha sonra aşağıdaki gibi taslağı (template) açabilirsiniz. Örnek dosyayı inceledikten sonra kendi içerieğinizi oluşturabilirsiniz.\n\n\n\n\n\nŞablonlar\n\n\n\n\n\nRapor şablonu ile bir rapor başlatın ve örün. Seçenekleri değiştirmeyi veya silmeyi deneyin."
  },
  {
    "objectID": "06_Rmarkdown.html#ödev",
    "href": "06_Rmarkdown.html#ödev",
    "title": "Rapor Hazırlama",
    "section": "",
    "text": "rpubs sayfalarını oluşturup, bu bilgiyi bana ulaştırınız.\nrpubs sayfasında ilk dört haftada öğrendiklerinizin kısa bir özetini paylaşınız.\nAyrıca linkte yer alan çoklu regresyon ile ilgili dökümanı repores paketinin Report şablonu ile oluşturmanızı bekliyorum. Bu dökümana eklenmiş ayrıca bir adet görsel bulunmaktadır. Görsele buradan ulaşabilirsiniz. Bu ödeviniz gönderdiğim dosyaya benzerliğine göre puanlanacaktır.\nnot: şanlonda (templatede) alan YMAL header css: extras/style.css # path to css file kısmını siliniz."
  },
  {
    "objectID": "06_Rmarkdown.html#diğer-kaynaklar",
    "href": "06_Rmarkdown.html#diğer-kaynaklar",
    "title": "Rapor Hazırlama",
    "section": "",
    "text": "Chapter 27: R Markdown in R for Data Science\nR Markdown Cheat Sheet\nR Markdown reference Guide\nR Markdown Tutorial\nR Markdown: The Definitive Guide by Yihui Xie, J. J. Allaire, & Garrett Grolemund\nProject Structure by Danielle Navarro\nHow to name files by Jenny Bryan\nPapaja Reproducible APA Manuscripts\nThe Turing Way"
  },
  {
    "objectID": "04_Nesneler.html",
    "href": "04_Nesneler.html",
    "title": "Nesne Oluşturma",
    "section": "",
    "text": "R lineer cebir temelli bir programlama dilidir.\nVektörler tek boyutludur.\nR’da vektörler birleştirmek (combine/concatenate) anlamına gelen c() fonksiyonu ile oluşturulmaktadır.\nR da veriler bir araya gelerek veri yapılarını oluşturur.\n\nvektör (vector)\n\nKarakter (character)\nSayısal (numeric)\n\ntam sayı (integer)\nondalıklı sayı (double)\nkarmaşık sayı (complex)\n\nMantıksal (logical)\nFaktör (factor)\n\nliste (list)\nmatris (matrix)\nveri seti (data.frame)\ndizi (array)\nFonksiyon (function)"
  },
  {
    "objectID": "04_Nesneler.html#vektör-işlemleri",
    "href": "04_Nesneler.html#vektör-işlemleri",
    "title": "Nesne Oluşturma",
    "section": "Vektör İşlemleri",
    "text": "Vektör İşlemleri\n\nVektör uzunluğu length() fonksiyonu ile vektör türleri ise class(), mode() ya da typeof() fonksiyonları ise tür belirlemek için kullanılmaktadır.\nVektörler bir veya daha fazla elemandan oluşabilmektedir.\n\n\n\nCode\na &lt;- 1  # tek elemandan oluşur.\n# Vektör uzunluğunu öğrenmek icin length() fonksiyonu\nlength(a)\n\n\n[1] 1\n\n\n\ntek elemanlı vektörler\n\n\n\nCode\nx &lt;- 1\ny &lt;- 1\nx+y\n\n\n[1] 2\n\n\n\nçok elemanlı vektörler\n\n\n\nCode\nx &lt;- c(3,4,5)\ny &lt;- c(1,2,3)\n# vektör eleman sayıları aynı mı?\nlength(x)==length(y)\n\n\n[1] TRUE\n\n\n\n\nCode\nx+y\n\n\n[1] 4 6 8\n\n\n\n\nCode\nx-y\n\n\n[1] 2 2 2\n\n\n\n\nCode\nx &lt;- 1:9\ny &lt;- c(1,2,3)\n# vektör eleman sayıları farklı mı?\nlength(x)/length(y)\n\n\n[1] 3\n\n\n\n\nCode\nx+y\n\n\n[1]  2  4  6  5  7  9  8 10 12\n\n\n\n\nCode\nx/y\n\n\n[1] 1.0 1.0 1.0 4.0 2.5 2.0 7.0 4.0 3.0\n\n\n\nçok elemanlı vektörler\n\n\n\nCode\nx &lt;- 1:5\ny &lt;- c(1,2)\n# vektör eleman sayıları farklı olduğunda\nlength(x)/length(y)\n\n\n[1] 2.5\n\n\n\n\nCode\nx &lt;- 1:10\n\n\n\nbir vektöründeki verilerin toplanması\n\n\n\nCode\nsum(x)\n\n\n[1] 55\n\n\n\nbir vektöründeki verilerin çarpılması\n\n\n\nCode\nprod(x)\n\n\n[1] 3628800\n\n\n\nbir vektöründeki verilerin küçükten büyüğe sıralanması\n\n\n\nCode\nsort(x)\n\n\n [1]  1  2  3  4  5  6  7  8  9 10\n\n\n\nbir vektörünün elemanların sıralarının tersine çevrilmesi\n\n\n\nCode\nrev(x)\n\n\n [1] 10  9  8  7  6  5  4  3  2  1\n\n\n\nbir vektöründeki verilerin standart sapmasının hesaplanması\n\n\n\nCode\nsd(x)\n\n\n[1] 3.02765\n\n\n\nbir vektöründeki en büyük verinin gösterilmesi\n\n\n\nCode\nmax(x)\n\n\n[1] 10\n\n\n\nbir vektöründeki en küçük verinin gösterilmesi\n\n\n\nCode\nmin(x)\n\n\n[1] 1\n\n\n\nEn büyük verinin vektörün kaçıncı elemanı olduğunun gösterilmesi\n\n\n\nCode\nwhich.max(x)\n\n\n[1] 10\n\n\n\nEn küçük verinin vektörün kaçıncı elemanı olduğunun gösterilmesi\n\n\n\nCode\nwhich.min(x)\n\n\n[1] 1"
  },
  {
    "objectID": "04_Nesneler.html#indeksler",
    "href": "04_Nesneler.html#indeksler",
    "title": "Nesne Oluşturma",
    "section": "Indeksler",
    "text": "Indeksler\n\nVektörlerden eleman sırası, isim ve mantıksal operatörler olmak üzere üç farklı yolla eleman seçilebilir.\n\n\n\nCode\nad  &lt;-  c(\"Ali\",\"Elif\",\"Su\",\"Deniz\",\"Aras\",\"Berk\",\"Can\",\"Ece\",\"Efe\",\"Arda\")\n\n\n\nad vektörünün 1. elemanı\n\n\n\nCode\nad[1]\n\n\n[1] \"Ali\"\n\n\n\nad vektörünün 5. elemanını yazdıracak kodu oluşturunuz.\n\n\n\nBuraya bakmadan önce kendin denemelisin!\nad[5]\n\n\n[1] \"Aras\"\n\n\n\nad vektörünün son elemanını yazdıracak kodu oluşturunuz.\n\n\n\nBuraya bakmadan önce kendin denemelisin!\nad[10]\n\n\n[1] \"Arda\"\n\n\n\nad vektörünün son elemanını yazdıracak kodu vektörün 10 elemanlı olduğunu bilmediğiniz de ne yaparsınız?\n\n\n\nBuraya bakmadan önce kendin denemelisin!\nad[length(ad)]\n\n\n[1] \"Arda\"\n\n\n\nVektörün sadece 1., 5. 8. elemanının yazdıracak kodu oluşturunuz.\n\n\n\nBuraya bakmadan önce kendin denemelisin!\nad[c(1,5,8)]\n\n\n[1] \"Ali\"  \"Aras\" \"Ece\" \n\n\n\nVektörün sadece 1. elemanının hariç tutacak kodu oluşturunuz.\n\n\n\nBuraya bakmadan önce kendin denemelisin!\nad[-1]\n\n\n[1] \"Elif\"  \"Su\"    \"Deniz\" \"Aras\"  \"Berk\"  \"Can\"   \"Ece\"   \"Efe\"   \"Arda\" \n\n\n\nVektörün 1. ve 5. elemanının hariç tutacak kodu oluşturunuz\n\n\n\nBuraya bakmadan önce kendin denemelisin!\nad[-c(1,5)]\n\n\n[1] \"Elif\"  \"Su\"    \"Deniz\" \"Berk\"  \"Can\"   \"Ece\"   \"Efe\"   \"Arda\" \n\n\n\nVektörün son üç elemanını yazdıracak kodu oluşturunuz\n\n\n\nBuraya bakmadan önce kendin denemelisin!\nad[(length(ad)-2):length(ad)]\n\n\n[1] \"Ece\"  \"Efe\"  \"Arda\""
  },
  {
    "objectID": "04_Nesneler.html#vektöre-eleman-eklenmesi",
    "href": "04_Nesneler.html#vektöre-eleman-eklenmesi",
    "title": "Nesne Oluşturma",
    "section": "Vektöre eleman eklenmesi",
    "text": "Vektöre eleman eklenmesi\n\n\nCode\nad[11] &lt;- \"Asu\"; ad\n\n\n [1] \"Ali\"   \"Elif\"  \"Su\"    \"Deniz\" \"Aras\"  \"Berk\"  \"Can\"   \"Ece\"   \"Efe\"  \n[10] \"Arda\"  \"Asu\"  \n\n\n\nvektöre birden fazla eleman eklenmesi\n\n\n\nCode\nad[12:13] &lt;- c(\"Ahu\",\"Han\"); ad\n\n\n [1] \"Ali\"   \"Elif\"  \"Su\"    \"Deniz\" \"Aras\"  \"Berk\"  \"Can\"   \"Ece\"   \"Efe\"  \n[10] \"Arda\"  \"Asu\"   \"Ahu\"   \"Han\"  \n\n\n\nVektörün ortasına eleman eklenmesi append() fonksiyonu ile yapılabilir. Fonksiyon yardım sayfasını inceleyiniz.\n\n\n\nCode\n(ad &lt;- append(ad, \"Taha\", after = 3))\n\n\n [1] \"Ali\"   \"Elif\"  \"Su\"    \"Taha\"  \"Deniz\" \"Aras\"  \"Berk\"  \"Can\"   \"Ece\"  \n[10] \"Efe\"   \"Arda\"  \"Asu\"   \"Ahu\"   \"Han\"  \n\n\n\nya da c() fonksiyonu ile yapılabilir.\n\n\n\nCode\nad &lt;- c(ad[1:5],\"Selim\",ad[7:length(ad)]); ad\n\n\n [1] \"Ali\"   \"Elif\"  \"Su\"    \"Taha\"  \"Deniz\" \"Selim\" \"Berk\"  \"Can\"   \"Ece\"  \n[10] \"Efe\"   \"Arda\"  \"Asu\"   \"Ahu\"   \"Han\""
  },
  {
    "objectID": "04_Nesneler.html#alıştırma",
    "href": "04_Nesneler.html#alıştırma",
    "title": "Nesne Oluşturma",
    "section": "Alıştırma",
    "text": "Alıştırma\n\n10 kişiden oluşan bir gruptaki kişilerinin boy ve kilo ölçümleri için ise aşağıdaki vektör oluşturulmuştur.\n\n\n\nCode\nad  &lt;-  c(\"Ali\",\"Elif\",\"Su\",\"Deniz\",\"Aras\",\"Berk\",\"Can\",\"Ece\",\"Efe\",\"Arda\")\nboy &lt;- c(160,165,170,155,167,162,169,158,160,164)\nkilo &lt;-c(50,55,57,50,48,65,58,62,45,47)\n\n\n\nEğer elimizdeki vektör isimlendirilmiş bir vektör ise eleman seçimini isimle de yapabiliriz.\n\n\n\nCode\n#isimsiz boy vektoru\nnames(boy) # names() fonksiyonu ile isimlendirme yapılabilir.\n\n\nNULL\n\n\n\nad vektörünü boy vektörü ile isimlendirirken nasıl kullanabiliriz?\n\n\n\nBuraya bakmadan önce kendin denemelisin!\nnames(boy) &lt;- ad\nboy\n\n\n  Ali  Elif    Su Deniz  Aras  Berk   Can   Ece   Efe  Arda \n  160   165   170   155   167   162   169   158   160   164 \n\n\n\nArda ’nın boyunu isimlendirilmiş vektörü kullanarak boy[\"Arda\"] ile yazdırırsınız\n\n\n\nCode\nboy[\"Arda\"]\n\n\nArda \n 164"
  },
  {
    "objectID": "04_Nesneler.html#örüntülerle-vektör-oluşturma",
    "href": "04_Nesneler.html#örüntülerle-vektör-oluşturma",
    "title": "Nesne Oluşturma",
    "section": "Örüntülerle Vektör Oluşturma",
    "text": "Örüntülerle Vektör Oluşturma\n\nVektör oluşturmanın farklı yolları bulunmaktadır. En basit yolu iki nokta \":\" operatörünü kullanmaktır.\n\n\n\nCode\nrakamlar &lt;- 0:9\nrakamlar\n\n\n [1] 0 1 2 3 4 5 6 7 8 9\n\n\n\nbüyükten küçüğe rakamlardan vektör oluşturulması\n\n\n\nCode\nrakamlar &lt;- 9:0\nrakamlar\n\n\n [1] 9 8 7 6 5 4 3 2 1 0\n\n\n\nseq()\n\nBelirli bir kurala göre sayı dizileri oluşturmak için ise seq(), rep() ve paste() fonksiyonlarından yararlanılabilir. İlk olarak bu fonksiyonların yardım sayfalarını inceleyelim.\n1’den 10’a kadar birer birer artan sayılardan dizi oluşturulacak kodu oluşturunuz.\nBir önceki işlemi argümansız olarak oluşturunuz.\nAynı çıktıyı tek bir argümanla elde edebilir misiniz?\nlength argümanını kullanarak aşağıdaki çıktıyı oluşturacak kodu oluşturunuz.\n\n\n\nBuraya bakmadan önce kendin denemelisin!\nseq(from = 1, to=3, length = 6)\n\n\n[1] 1.0 1.4 1.8 2.2 2.6 3.0\n\n\n\nby argümanını ile artış miktarını kullanarak aşağıdaki çıktıyı oluşturacak kodu oluşturunuz.\n\n\n\nBuraya bakmadan önce kendin denemelisin!\nseq(from=1,to=3,by=0.5)\n\n\n[1] 1.0 1.5 2.0 2.5 3.0\n\n\n\nBelirli bir aralıkta kaç elemanın yer alacağını length.out argümanı kullanarak aşağıdaki çıktıyı oluşturacak kodu oluşturunuz.\n\n\n\n[1] 1.0 1.5 2.0 2.5 3.0\n\n\n\n\nrep()\nrep() fonksiyonu için örnekler\n\n\nCode\n# üç elemanlı bir vektörün üç kere tekrar ettirilmesi\nrep(c(3,4,5), 3)\n\n\n[1] 3 4 5 3 4 5 3 4 5\n\n\n\n\nCode\n# rakamların üç kere tekrar ettirilmesi\nrep(0:9, times = 3) \n\n\n [1] 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9\n\n\n\na &lt;- c(3,5,7) vektörünü kullanarak aşağıdaki çıktıyı elde edecek kodu hazırlayınız.\n\n\n\nBuraya bakmadan önce kendin denemelisin!\na &lt;- c(3,5,7)\nrep(a, each = 3) \n\n\n[1] 3 3 3 5 5 5 7 7 7\n\n\n\na &lt;- c(3,5,7) vektörünü kullanarak aşağıdaki çıktıyı elde edecek kodu hazırlayınız.\n\n\n\nBuraya bakmadan önce kendin denemelisin!\na &lt;- c(3,5,7)\nrep(a,each=3,times=3) \n\n\n [1] 3 3 3 5 5 5 7 7 7 3 3 3 5 5 5 7 7 7 3 3 3 5 5 5 7 7 7\n\n\n\nÇıktıyı elde edecek kodu hazırlayınız.\n\n\n\nBuraya bakmadan önce kendin denemelisin!\nrep(1:4,c(2,2,2,2))\n\n\n[1] 1 1 2 2 3 3 4 4\n\n\n\nÇıktıyı elde edecek kodu hazırlayınız.\n\n\n\nBuraya bakmadan önce kendin denemelisin!\nrep(1:3,1:3)\n\n\n[1] 1 2 2 3 3 3\n\n\n\n\npaste()\n\npaste()fonksiyonu çıktısı her zaman için karakterdir.\n\n\n\nCode\npaste(1:4) # çıktısı karakterdir\n\n\n[1] \"1\" \"2\" \"3\" \"4\"\n\n\n\n\nCode\nclass(paste(1:4))\n\n\n[1] \"character\"\n\n\n\nÇıktıyı elde edecek kodu tamamlayınız paste(\"test\",...)\n\n\n\nBuraya bakmadan önce kendin denemelisin!\npaste(\"test\",1:10) \n\n\n [1] \"test 1\"  \"test 2\"  \"test 3\"  \"test 4\"  \"test 5\"  \"test 6\"  \"test 7\" \n [8] \"test 8\"  \"test 9\"  \"test 10\"\n\n\n\nÇıktıyı elde edecek kodu tamamlayınızpaste(\"test\",1:10,\"...\",sep=\"_\")\n\n\n\nBuraya bakmadan önce kendin denemelisin!\npaste(\"test\",1:10,\"puan\",sep=\"_\")\n\n\n [1] \"test_1_puan\"  \"test_2_puan\"  \"test_3_puan\"  \"test_4_puan\"  \"test_5_puan\" \n [6] \"test_6_puan\"  \"test_7_puan\"  \"test_8_puan\"  \"test_9_puan\"  \"test_10_puan\"\n\n\n\nÇıktıyı elde edecek kodu tamamlayınız paste(\"test\",c(\"A\",\"B\",\"C\",\"D\",...))\n\n\n\nBuraya bakmadan önce kendin denemelisin!\npaste(\"test\",c(\"A\",\"B\",\"C\",\"D\",1:4)) \n\n\n[1] \"test A\" \"test B\" \"test C\" \"test D\" \"test 1\" \"test 2\" \"test 3\" \"test 4\""
  },
  {
    "objectID": "04_Nesneler.html#rasgele-veri-oluşturma",
    "href": "04_Nesneler.html#rasgele-veri-oluşturma",
    "title": "Nesne Oluşturma",
    "section": "Rasgele Veri Oluşturma",
    "text": "Rasgele Veri Oluşturma\n\nFarklı fonksiyonlarla rastgele veri üretilebilir. Örneğin 0-100 arasında 20 farklı değer elde edilmek istenilsin. Bunu yapmak için sample(),runif() ya da rnorm() fonksiyonlarından yararlanılabilir.\n\n\n\nCode\nsample(0:100,5)\n\n\n[1] 75 24 91 85 98\n\n\n\n\nCode\nrunif(10,  0, 5)\n\n\n [1] 4.7021352 4.0093822 3.1587141 1.4519296 4.2446705 3.6188257 3.0487121\n [8] 0.0459622 2.2423856 3.2732156\n\n\n\n\nCode\nrnorm(10,50,5)\n\n\n [1] 50.02257 47.67132 46.87679 51.76868 46.94669 48.95917 55.63049 43.24429\n [9] 46.82078 49.08193\n\n\n\nKullanılan üç fonksiyonun da yardım sayfalarını ve kullanım amaçlarını inceleyiniz."
  },
  {
    "objectID": "04_Nesneler.html#alıştırma-1",
    "href": "04_Nesneler.html#alıştırma-1",
    "title": "Nesne Oluşturma",
    "section": "Alıştırma",
    "text": "Alıştırma\nBKI vücut ağırlığınızın metre cinsinden boy uzunluğunun karesine bölünmesi ile elde edilmektedir. Her bir bireye ait BKI değerini hesaplayınız. BKI değerlerinin ortalaması kaçtır(iki ondalığa yuvarlayınız)?\n\n\nCode\nad  &lt;-  c(\"Ali\",\"Elif\",\"Su\",\"Deniz\",\"Aras\",\"Berk\",\"Can\",\"Ece\",\"Efe\",\"Arda\")\nboy &lt;- c(160,165,170,155,167,162,169,158,160,164)\nkilo &lt;- c(55,55,57,50,48,65,58,62,45,47)\n\n\n\n\nBuraya bakmadan önce kendin denemelisin!\n# BKI  hesaplanması\nboy_m  &lt;- boy/100\nBKI &lt;- kilo/( boy_m * boy_m)\nround(mean(BKI),2)\n\n\n[1] 20.44"
  },
  {
    "objectID": "02_Paket.html",
    "href": "02_Paket.html",
    "title": "R Paketler",
    "section": "",
    "text": "R’yi yüklediğinizde, veri işleme ve istatistiksel analiz seçenekleri de dahil olmak üzere bir dizi fonksiyona erişebilirsiniz. Varsayılan kurulumda yer alan fonksiyonlar genellikle Temel R/Base R olarak adlandırılır ve birçok Temel R fonksiyonunu gösteren faydalı bir cheatsheet sayfası vardır 🔗cheatsheet\nTemel R telefonunuzda gelen varsayılan uygulamalar, paketleri ise ayrıca indirmeniz gereken ek uygulamalar olarak düşünmek faydalı olabilir.\nR fonksiyonları ayrı paketler halinde düzenlenmişlerdir. Böylece gerekli paketlerle çalışarak daha az bellek kullanımı ve hızlı işlem gücü sağlanır.\nBu paketlerin bir başka avantajı da yazılan fonksiyonlardan oluşan paketlerin CRAN’den temin edilerek yüklenebilmesidir.\nHer paketin bir yaratıcısı ve kendisine ait bir yardım dosyası bulunur.\n\n\n\nCode\n# paket yukleme\ninstall.packages(\"CTT\")\n# paket aktive etme\nlibrary(CTT)\n\n\n\nPaket yükleme işlemi Rstudio’da yer alan menüler aracılığı ile de yapılabilmektedir.\nR paketleri R fonksiyonlarının, verilerinin ve iyi derlenmiş bir formatta kodların kombinasyonlarından oluşmaktadır. library() komutu ile kişisel kütüphanenizdeki yüklü paketleri görebilirsiniz.\nSadece temel pakette 1000’den fazla fonksiyon bulunmaktadır.\n\n\n\nCode\n# temel paket fonksiyonlarina ulasimak icin  \nfonksiyonlar &lt;-  builtins()\nlength(fonksiyonlar)\n\n\n[1] 1407\n\n\n\n\nCode\nfonksiyonlar[910:920]\n\n\n [1] \"default.stringsAsFactors\" \"declare\"                 \n [3] \"debugonce\"                \"debuggingState\"          \n [5] \"debug\"                    \"date\"                    \n [7] \"data.matrix\"              \"data.frame\"              \n [9] \"data.class\"               \"cut.POSIXt\"              \n[11] \"cut.default\"             \n\n\n\n\n\nyükle-etkinleştir\n\n\n\n\n\nBir paketi kullanabilmek için önce onu yüklemeniz gerekir. Aşağıdaki kod, bu derste çok sık kullanacağımız bir paket olan tidyverse paketini yükler.\n\n\n\nCode\ninstall.packages(\"tidyverse\")\n\n\n\nBir paketi yalnızca bir kez yüklemeniz gerekir, ancak R’yi her başlattığınızda kullanmak istediğiniz paketleri etkinleştirmeniz gerekir, benzer şekilde telefonunuza bir uygulamayı bir kez yüklemeniz gerekir, ancak her kullanmak istediğinizde açmanız gerekir.\n\n\n\n\n\n\n\n!!!\n\n\n\nUYARI: WARNING: Rtools is required to build R packages” gibi bir hata mesajı alırsanız, [Rtools] (https://cran.r-project.org/bin/windows/Rtools/) adlı ekstra bir yazılım indirmeniz ve yüklemeniz gerekebilir.\n\n\n\n\n\nTidyverse’i etkinleştirmek için aşağıdaki kodu çalıştırın.\n\n\n\nCode\nlibrary(tidyverse)\n\n\n\nBir hata mesajı gibi görünen bir şey alacaksınız - öyle değil. Bu sadece R’nin size ne yaptığını anlatmasıdır.\nŞimdi tidyverse paketini etkinleştirdiğimize göre, içerdiği fonksiyonlardan herhangi birini kullanabiliriz, ancak unutmayın, R’yi her başlattığınızda library() fonksiyonunu çalıştırmanız gerekir.\n\n\n\n\n\n\nBazı R paketleri github üzerinden yayınlanmaktadır. Bu paketleri standart yollarla yükleyemiyiz. Bu paketleri yüklemek için ilk olarak devtools paketinin yüklü olmasına ihtiyaç vardır.\nBu paketlere bir örnek yapısal eşitlik modelleri ile ilgili APA formatında tablolar üreten semtools verilebilir. Paketin github sayfası 🔗linkte yer almaktadır. Paketin yüklenmesi için örnek kod aşağıda verilmiştir.\n\n\n\nCode\ndevtools::install_github(\"dr-JT/semoutput\")\n\n\n\n\n\n\nR’da temel ve diğer paketlerde yer alan fonksiyonların işlevleri görmek için yardım sayfalarını inceleyebilirsiniz. ? ve help() fonksiyonları ayni işleve sahiptir.\n\n\n\nCode\n?is.na\n\nhelp(sqrt)\n\n\n\nÖrneğin CTT paketini hem yüklediniz hem de etkinleştirdiniz. Paket fonksiyon ve veri içeriğini aşağıdaki komutlarla görebilirsiniz.\n\n\n\nCode\n# install.packages(CTT)\nlibrary(CTT)\nls(\"package:CTT\") \ndata(package = \"CTT\") # yeni bir sekmede acilir.\n?reliability\n\n\n\nEtkinleştirdiğiniz paketlerde yer alan fonksiyonların yardım sayfalarına ulaşabilirsiniz.\n\n\n\n\n\nDaha da fazla fonksiyona sahip binlerce farklı R paketi vardır. Ne yazık ki, bazen farklı paketler aynı fonksiyon isimlerine sahiptir. Örneğin, dplyr ve MASS paketlerinin her ikisi de select() adında bir fonksiyona sahiptir. Bu paketlerin her ikisini de yüklerseniz, R size bir çakışma olduğunu söyleyen bir uyarı üretecektir.\n\n\n\nCode\nlibrary(dplyr)\nlibrary(MASS)\n\n\n\nBu durumda, R size dplyr paketindeki select() fonksiyonunun aynı isimli başka bir fonksiyon tarafından gizlendiğini (veya ‘maskelendiğini’) söylüyor. Eğer select() fonksiyonunu kullanmayı deneseydiniz, R en son yüklenen paketteki fonksiyonu kullanacaktı - bu durumda MASS fonksiyonunu kullanacaktı.\nBelirli bir fonksiyon için hangi paketi kullanmak istediğinizi belirtmek istiyorsanız, örneğin package::function biçiminde kod kullanabilirsiniz:\n\n\n\nCode\ndplyr::select()\nMASS::select()\n\n\n\n\n\n\nR ve R Studio güncellemelerine ek olarak, paketlerin yazarları da bazen kodlarını günceller. Bu, bir pakete fonksiyon eklemek için olabileceği gibi hataları düzeltmek için de olabilir. Kaçınılması gereken bir şey, yüklü bir paketi istemeden güncellemektir.\ninstall.packages() fonksiyonunu çalıştırdığınızda, her zaman paketin en son sürümü yüklenir ve yüklemiş olabileceğiniz eski sürümlerin üzerine yazılır. Bazen bu bir sorun teşkil etmez, ancak bazen paket önemli ölçüde değiştiği için güncellemenin kodunuzun artık çalışmadığı anlamına geldiğini görürsünüz. Bir paketin eski bir sürümüne geri dönmek mümkündür ancak yine de bundan kaçınmaya çalışın.\n\n\n\n\nBir paketin üzerine yanlışlıkla daha sonraki bir sürümün yazılmasını önlemek için, sizin veya bir başkasının kodu yanlışlıkla çalıştırması ihtimaline karşı analiz komut dosyalarınıza install.packages() i asla dahil etmemelisiniz.\n\n\n\n\n\n\n\nR’a atıfta bulunmanız ve referans vermeniz gereken bilimsel bir rapor yazmaktan biraz uzak olabilirsiniz, ancak zamanı geldiğinde bunu onu geliştiren insanlara (çoğu ücretsiz!) kredi vermek için yapmak önemlidir. R, RStudio ve kullandığınız paketler için ayrı alıntılar sağlamalısınız.\nKullandığınız R sürümü için atıf almak için, size her zaman en son atıfı sağlayacak olan citation() fonksiyonunu çalıştırmanız yeterlidir.\n\n\n\nCode\ncitation()\n\n\nTo cite R in publications use:\n\n  R Core Team (2024). _R: A Language and Environment for Statistical\n  Computing_. R Foundation for Statistical Computing, Vienna, Austria.\n  &lt;https://www.R-project.org/&gt;.\n\nA BibTeX entry for LaTeX users is\n\n  @Manual{,\n    title = {R: A Language and Environment for Statistical Computing},\n    author = {{R Core Team}},\n    organization = {R Foundation for Statistical Computing},\n    address = {Vienna, Austria},\n    year = {2024},\n    url = {https://www.R-project.org/},\n  }\n\nWe have invested a lot of time and effort in creating R, please cite it\nwhen using it for data analysis. See also 'citation(\"pkgname\")' for\nciting R packages.\n\n\n\nKullandığınız herhangi bir paket için atıf oluşturmak için, atıf yapmak istediğiniz paketin adıyla birlikte citation() işlevini de kullanabilirsiniz.\n\n\n\nCode\ncitation(\"tidyverse\")\n\n\nTo cite package 'tidyverse' in publications use:\n\n  Wickham H, Averick M, Bryan J, Chang W, McGowan LD, François R,\n  Grolemund G, Hayes A, Henry L, Hester J, Kuhn M, Pedersen TL, Miller\n  E, Bache SM, Müller K, Ooms J, Robinson D, Seidel DP, Spinu V,\n  Takahashi K, Vaughan D, Wilke C, Woo K, Yutani H (2019). \"Welcome to\n  the tidyverse.\" _Journal of Open Source Software_, *4*(43), 1686.\n  doi:10.21105/joss.01686 &lt;https://doi.org/10.21105/joss.01686&gt;.\n\nA BibTeX entry for LaTeX users is\n\n  @Article{,\n    title = {Welcome to the {tidyverse}},\n    author = {Hadley Wickham and Mara Averick and Jennifer Bryan and Winston Chang and Lucy D'Agostino McGowan and Romain François and Garrett Grolemund and Alex Hayes and Lionel Henry and Jim Hester and Max Kuhn and Thomas Lin Pedersen and Evan Miller and Stephan Milton Bache and Kirill Müller and Jeroen Ooms and David Robinson and Dana Paige Seidel and Vitalie Spinu and Kohske Takahashi and Davis Vaughan and Claus Wilke and Kara Woo and Hiroaki Yutani},\n    year = {2019},\n    journal = {Journal of Open Source Software},\n    volume = {4},\n    number = {43},\n    pages = {1686},\n    doi = {10.21105/joss.01686},\n  }\n\n\n\nKullandığınız RStudio sürümüne ait alıntıyı oluşturmak için RStudio.Vesion() fonksiyonunu kullanabilirsiniz:\n\n\n\nCode\nRStudio.Version()\n\n\n\nSon olarak, yöntem bölümünüzün yazımında bunun nasıl görünebileceğine dair bir örnek:\n\n\nAnaliz R (R Core Team, 2020), RStudio (Rstudio Team, 2020) ve tidyverse paketi (Wickham, 2017) kullanılarak gerçekleştirilmiştir.\n\n\nBelirtildiği gibi, bunu hemen yapmak zorunda kalmayabilirsiniz; ancak, yapmanız gerektiğinde bunu göz önünde bulundurmanız önemli. Açık kaynak topluluğuna katkılarından dolayı kredi vermek, emeğe saygı açısından büyük bir öneme sahiptir.\nAyrıca Rmarkdownun citation aracı ile bunu yapmak oldukça kolay !"
  },
  {
    "objectID": "02_Paket.html#tidyverse-paketini-yükleme",
    "href": "02_Paket.html#tidyverse-paketini-yükleme",
    "title": "R Paketler",
    "section": "",
    "text": "Bir paketi kullanabilmek için önce onu yüklemeniz gerekir. Aşağıdaki kod, bu derste çok sık kullanacağımız bir paket olan tidyverse paketini yükler.\n\n\n\nCode\ninstall.packages(\"tidyverse\")\n\n\n\nBir paketi yalnızca bir kez yüklemeniz gerekir, ancak R’yi her başlattığınızda kullanmak istediğiniz paketleri etkinleştirmeniz gerekir, benzer şekilde telefonunuza bir uygulamayı bir kez yüklemeniz gerekir, ancak her kullanmak istediğinizde açmanız gerekir.\n\n\n\n\n\n\n\n!!!\n\n\n\nUYARI: WARNING: Rtools is required to build R packages” gibi bir hata mesajı alırsanız, [Rtools] (https://cran.r-project.org/bin/windows/Rtools/) adlı ekstra bir yazılım indirmeniz ve yüklemeniz gerekebilir.\n\n\n\n\n\nTidyverse’i etkinleştirmek için aşağıdaki kodu çalıştırın.\n\n\n\nCode\nlibrary(tidyverse)\n\n\n\nBir hata mesajı gibi görünen bir şey alacaksınız - öyle değil. Bu sadece R’nin size ne yaptığını anlatmasıdır.\nŞimdi tidyverse paketini etkinleştirdiğimize göre, içerdiği fonksiyonlardan herhangi birini kullanabiliriz, ancak unutmayın, R’yi her başlattığınızda library() fonksiyonunu çalıştırmanız gerekir."
  },
  {
    "objectID": "02_Paket.html#github-paketleri-yükleme",
    "href": "02_Paket.html#github-paketleri-yükleme",
    "title": "R Paketler",
    "section": "",
    "text": "Bazı R paketleri github üzerinden yayınlanmaktadır. Bu paketleri standart yollarla yükleyemiyiz. Bu paketleri yüklemek için ilk olarak devtools paketinin yüklü olmasına ihtiyaç vardır.\nBu paketlere bir örnek yapısal eşitlik modelleri ile ilgili APA formatında tablolar üreten semtools verilebilir. Paketin github sayfası 🔗linkte yer almaktadır. Paketin yüklenmesi için örnek kod aşağıda verilmiştir.\n\n\n\nCode\ndevtools::install_github(\"dr-JT/semoutput\")"
  },
  {
    "objectID": "02_Paket.html#yardım-sayfaları",
    "href": "02_Paket.html#yardım-sayfaları",
    "title": "R Paketler",
    "section": "",
    "text": "R’da temel ve diğer paketlerde yer alan fonksiyonların işlevleri görmek için yardım sayfalarını inceleyebilirsiniz. ? ve help() fonksiyonları ayni işleve sahiptir.\n\n\n\nCode\n?is.na\n\nhelp(sqrt)\n\n\n\nÖrneğin CTT paketini hem yüklediniz hem de etkinleştirdiniz. Paket fonksiyon ve veri içeriğini aşağıdaki komutlarla görebilirsiniz.\n\n\n\nCode\n# install.packages(CTT)\nlibrary(CTT)\nls(\"package:CTT\") \ndata(package = \"CTT\") # yeni bir sekmede acilir.\n?reliability\n\n\n\nEtkinleştirdiğiniz paketlerde yer alan fonksiyonların yardım sayfalarına ulaşabilirsiniz."
  },
  {
    "objectID": "02_Paket.html#conflicts",
    "href": "02_Paket.html#conflicts",
    "title": "R Paketler",
    "section": "",
    "text": "Daha da fazla fonksiyona sahip binlerce farklı R paketi vardır. Ne yazık ki, bazen farklı paketler aynı fonksiyon isimlerine sahiptir. Örneğin, dplyr ve MASS paketlerinin her ikisi de select() adında bir fonksiyona sahiptir. Bu paketlerin her ikisini de yüklerseniz, R size bir çakışma olduğunu söyleyen bir uyarı üretecektir.\n\n\n\nCode\nlibrary(dplyr)\nlibrary(MASS)\n\n\n\nBu durumda, R size dplyr paketindeki select() fonksiyonunun aynı isimli başka bir fonksiyon tarafından gizlendiğini (veya ‘maskelendiğini’) söylüyor. Eğer select() fonksiyonunu kullanmayı deneseydiniz, R en son yüklenen paketteki fonksiyonu kullanacaktı - bu durumda MASS fonksiyonunu kullanacaktı.\nBelirli bir fonksiyon için hangi paketi kullanmak istediğinizi belirtmek istiyorsanız, örneğin package::function biçiminde kod kullanabilirsiniz:\n\n\n\nCode\ndplyr::select()\nMASS::select()"
  },
  {
    "objectID": "02_Paket.html#paket-güncelleme",
    "href": "02_Paket.html#paket-güncelleme",
    "title": "R Paketler",
    "section": "",
    "text": "R ve R Studio güncellemelerine ek olarak, paketlerin yazarları da bazen kodlarını günceller. Bu, bir pakete fonksiyon eklemek için olabileceği gibi hataları düzeltmek için de olabilir. Kaçınılması gereken bir şey, yüklü bir paketi istemeden güncellemektir.\ninstall.packages() fonksiyonunu çalıştırdığınızda, her zaman paketin en son sürümü yüklenir ve yüklemiş olabileceğiniz eski sürümlerin üzerine yazılır. Bazen bu bir sorun teşkil etmez, ancak bazen paket önemli ölçüde değiştiği için güncellemenin kodunuzun artık çalışmadığı anlamına geldiğini görürsünüz. Bir paketin eski bir sürümüne geri dönmek mümkündür ancak yine de bundan kaçınmaya çalışın.\n\n\n\n\nBir paketin üzerine yanlışlıkla daha sonraki bir sürümün yazılmasını önlemek için, sizin veya bir başkasının kodu yanlışlıkla çalıştırması ihtimaline karşı analiz komut dosyalarınıza install.packages() i asla dahil etmemelisiniz."
  },
  {
    "objectID": "02_Paket.html#r-ve-rstudioya-nasıl-alıntı-yapılır",
    "href": "02_Paket.html#r-ve-rstudioya-nasıl-alıntı-yapılır",
    "title": "R Paketler",
    "section": "",
    "text": "R’a atıfta bulunmanız ve referans vermeniz gereken bilimsel bir rapor yazmaktan biraz uzak olabilirsiniz, ancak zamanı geldiğinde bunu onu geliştiren insanlara (çoğu ücretsiz!) kredi vermek için yapmak önemlidir. R, RStudio ve kullandığınız paketler için ayrı alıntılar sağlamalısınız.\nKullandığınız R sürümü için atıf almak için, size her zaman en son atıfı sağlayacak olan citation() fonksiyonunu çalıştırmanız yeterlidir.\n\n\n\nCode\ncitation()\n\n\nTo cite R in publications use:\n\n  R Core Team (2024). _R: A Language and Environment for Statistical\n  Computing_. R Foundation for Statistical Computing, Vienna, Austria.\n  &lt;https://www.R-project.org/&gt;.\n\nA BibTeX entry for LaTeX users is\n\n  @Manual{,\n    title = {R: A Language and Environment for Statistical Computing},\n    author = {{R Core Team}},\n    organization = {R Foundation for Statistical Computing},\n    address = {Vienna, Austria},\n    year = {2024},\n    url = {https://www.R-project.org/},\n  }\n\nWe have invested a lot of time and effort in creating R, please cite it\nwhen using it for data analysis. See also 'citation(\"pkgname\")' for\nciting R packages.\n\n\n\nKullandığınız herhangi bir paket için atıf oluşturmak için, atıf yapmak istediğiniz paketin adıyla birlikte citation() işlevini de kullanabilirsiniz.\n\n\n\nCode\ncitation(\"tidyverse\")\n\n\nTo cite package 'tidyverse' in publications use:\n\n  Wickham H, Averick M, Bryan J, Chang W, McGowan LD, François R,\n  Grolemund G, Hayes A, Henry L, Hester J, Kuhn M, Pedersen TL, Miller\n  E, Bache SM, Müller K, Ooms J, Robinson D, Seidel DP, Spinu V,\n  Takahashi K, Vaughan D, Wilke C, Woo K, Yutani H (2019). \"Welcome to\n  the tidyverse.\" _Journal of Open Source Software_, *4*(43), 1686.\n  doi:10.21105/joss.01686 &lt;https://doi.org/10.21105/joss.01686&gt;.\n\nA BibTeX entry for LaTeX users is\n\n  @Article{,\n    title = {Welcome to the {tidyverse}},\n    author = {Hadley Wickham and Mara Averick and Jennifer Bryan and Winston Chang and Lucy D'Agostino McGowan and Romain François and Garrett Grolemund and Alex Hayes and Lionel Henry and Jim Hester and Max Kuhn and Thomas Lin Pedersen and Evan Miller and Stephan Milton Bache and Kirill Müller and Jeroen Ooms and David Robinson and Dana Paige Seidel and Vitalie Spinu and Kohske Takahashi and Davis Vaughan and Claus Wilke and Kara Woo and Hiroaki Yutani},\n    year = {2019},\n    journal = {Journal of Open Source Software},\n    volume = {4},\n    number = {43},\n    pages = {1686},\n    doi = {10.21105/joss.01686},\n  }\n\n\n\nKullandığınız RStudio sürümüne ait alıntıyı oluşturmak için RStudio.Vesion() fonksiyonunu kullanabilirsiniz:\n\n\n\nCode\nRStudio.Version()\n\n\n\nSon olarak, yöntem bölümünüzün yazımında bunun nasıl görünebileceğine dair bir örnek:\n\n\nAnaliz R (R Core Team, 2020), RStudio (Rstudio Team, 2020) ve tidyverse paketi (Wickham, 2017) kullanılarak gerçekleştirilmiştir.\n\n\nBelirtildiği gibi, bunu hemen yapmak zorunda kalmayabilirsiniz; ancak, yapmanız gerektiğinde bunu göz önünde bulundurmanız önemli. Açık kaynak topluluğuna katkılarından dolayı kredi vermek, emeğe saygı açısından büyük bir öneme sahiptir.\nAyrıca Rmarkdownun citation aracı ile bunu yapmak oldukça kolay !"
  },
  {
    "objectID": "01_Kurulum.html",
    "href": "01_Kurulum.html",
    "title": "R ve Rstudio Temeller",
    "section": "",
    "text": "Bu bölümde, R ve RStudio’nun nasıl kullanılacağının yanı sıra bazı temel programlama kavramları ve terminolojisi, yaygın tuzaklar, faydalı ipuçları ve nereden yardım alınabileceği konularını ele alacağız.\nProgramlama deneyimi olmayanlar için bu bölüm oldukça yararlı olacaktır ancak daha önce R kullanmış olsanız bile bazı yararlı ipuçları ve püf noktaları bulabilirsiniz."
  },
  {
    "objectID": "01_Kurulum.html#r-nedir",
    "href": "01_Kurulum.html#r-nedir",
    "title": "R ve Rstudio Temeller",
    "section": "R Nedir?",
    "text": "R Nedir?\n\nR istatistiksel hesaplamalar yapabilen bir programlama dilidir.\n1996 yılında Auckland Universitesi’nde Ross Ihaka ve Robert Gentleman tarafından geliştirilmiştir.\n1960 yılında Bell Laboratories’de John Chambers ve arkadaşları tarafından geliştirilen S dilinin açık kaynak kodlu halidir.\nR yazılımı Genel Kamu Lisansi (GNU* General Public Licence) koşulları altında ücretsiz dağıtılmaktadır.\nR ve Temel Geliştirme Takımı (R core team) ile ilgili bilgilere R’in internet sitesinden (https://www.r-project.org/) ulaşılabilir.\nR dilinin ilk sürümü 29 Subat 2000 tarihinde yayınlanmıştır. Her iki-üç ayda bir sürümler güncellenmektedir.\n\nR version 4.4.1 (Beagle Scouts) has been released on 2024-06-14\n\nRStudio, R ile çalışmayı kolaylaştıran bir Entegre Geliştirme Ortamıdır (Integrated Development Environment[IDE]).\nBunu İngilizce bilmek ve kitap yazmak için NotePad gibi düz bir metin editörü kullanmak ile Microsoft Word gibi bir kelime işlemci kullanmak gibi düşünün. Bunu yapabilirsiniz, ancak bu kadar iyi görünmez ve yazım denetimi ve biçimlendirme gibi şeyler olmadan çok daha zor olur. Benzer bir şekilde, R Studio olmadan da R kullanabilirsiniz ancak bunu tavsiye etmiyorum.\nUnutmamanız gereken en önemli şey, bu ders için tüm çalışmalarınızı RStudio kullanarak yapacak olsanız da, aslında iki yazılım parçasını da kullanıyorsunuz, bu da zaman zaman her ikisinin de ayrı güncellemeleri olabileceği anlamına geliyor.\nR’yi ölçme için kullanmanın iki yolu vardır. İlk olarak, web tarayıcınız aracılığıyla R ve R’nin çevrimiçi bir sürümünü kullanabilirsiniz (R server/sunucusu). İkincisi, R ve RStudio’yu dizüstü veya masaüstü bilgisayarınıza ücretsiz olarak indirip kurabilirsiniz."
  },
  {
    "objectID": "01_Kurulum.html#avantajları",
    "href": "01_Kurulum.html#avantajları",
    "title": "R ve Rstudio Temeller",
    "section": "Avantajları",
    "text": "Avantajları\n\nR özgür istatiksel bir programlama dilidir.\nR aynı zamanda bir yorumlayıcıdır (interpreter).\nR, bir veri tabanı değildir ama veri tabanlarına bağlanabilir.\nÖnceki sürümleri kullancı dostu olmasa da, son zamanlarda kod editörlerine çok sayıda işlev eklenmiştir.\nAyrıca java gibi diller aracılığı ile ara yüz desteğine sahip bir yazılım geliştirme ortamıdır.\nTablolardan oluşan yazılım paketlerine (Excel, Minitab gibi) benzememekle birlikte, yeni geliştiren bazı paketler farklı ara yüzler sağlamaktadır.\nÜcretsiz olması nedeniyle, ticari desteğe tabi bir yazılım değildir. Ancak destek alınabilecek çok sayıda kaynağa erisilebilir. (stackoverflow, mail listeleri, chatgbt)"
  },
  {
    "objectID": "01_Kurulum.html#neden-r",
    "href": "01_Kurulum.html#neden-r",
    "title": "R ve Rstudio Temeller",
    "section": "Neden R?",
    "text": "Neden R?\n\nR istatistiksel programlama, veri analizi ve grafiksel gösterim için kullanılan ve ticari bir amaç gütmeyen ücretsiz bir yazılımdır.\nR, UNIX, Windows ve MacOS gibi çeşitli platformlarda kodları derlemekte ve çalıştırmaktadır.\nSPSS, SAS gibi veri analizi programları ücretlidir, ayrıca bazı özel psikometri analizleri için yeterli değildir.\nR, açık kaynak kodlu olduğu için program kodlarına istenildiği zaman erişilebilir.\nDiğer istatistiksel yazılımlar ile karşılaştırıldığında R komut satırı ara yüzünü kullanmaktadır.\nBasit koşullar, döngüler ve kişi tanımlı fonksiyonlar yazmaya uyumlu basit ve etkili bir yazım diline sahiptir.\nR’in ayrıca grafiksel imkânları oldukça fazladır; bu nedenle yayınlanabilir/basıma uygun grafikler oluşturmak kolaydır.\nR ekibi birçok alanda ayrıntılı dokümantasyonu yapılmış R paketleri geliştirmektedir.\nKlasik istatistik yazılımlarında analiz sonuçları bir kez elde edilir. R yazılımında ise sonuçlar çalışma alanına kaydedilerek, ileriki analiz aşamalarında tekrar kullanabilir.\nR, psikometri alanında sıklıkla kullanılan simülasyon çalışmaları için (tekrarlı işlemler için) de avantaj sağlamaktadır.\nR, diğer programlama dilleri ve istatistik paket programları ile uyumludur."
  },
  {
    "objectID": "01_Kurulum.html#r-farklı-amaçlarla-kullanılanılabilir",
    "href": "01_Kurulum.html#r-farklı-amaçlarla-kullanılanılabilir",
    "title": "R ve Rstudio Temeller",
    "section": "R farklı amaçlarla kullanılanılabilir",
    "text": "R farklı amaçlarla kullanılanılabilir\n\nGrafiksek kullanıcı ara yüzleri ile (GUI) ile R’ın SPSS gibi görünmesini sağlayabilirsiniz. Bu şekilde bir şeyler yapmak ilk deneyim olarak yararlıdır. (R Commander (Rcmdr), Deducer)\nR’ı arka planda kullana java destekli çeşitli programlarda bulunmaktadır. (JASP, jamovi, RKWard)\nBelirli paketlerin sözdizimini öğrenip ve kullabilirsiniz. (programcı olmayanların R’yi kullanmasının yaygın bir yolu)\n\nPaketler, fonksiyon ve yardım dosyalarından oluşan gruplardır. Başka biri çözümü zaten “programlamıştır” ve siz de ihtiyaçlarınıza yeterince uyduğu için onu kullanıyorsunuzdur.\n\nR-programlamayı öğrenin -&gt; Kendi fonksiyonlarınızı yazın -&gt; Öğrenmesi en zoru, ancak maksimum esneklik sağlar"
  },
  {
    "objectID": "01_Kurulum.html#dezavantajları",
    "href": "01_Kurulum.html#dezavantajları",
    "title": "R ve Rstudio Temeller",
    "section": "Dezavantajları",
    "text": "Dezavantajları\n\nBaşta öğrenilmesi kolay görünse de, R’da uzmanlaşmak oldukça zordur.\nMenu ile kullanılan programlara alışkın olan kişiler için başlangıçta korkutucu olabilir.\nR ile bir analizi yapabilmek için planlama yapılması gerekmektedir.\nR kullanıcıları çoğunlukla programlamacı değildir. Programlamaya hâkim olmayan kişiler tarafından hazırlanan, okunması ve sürdürülebilirliği zor kodlar oluşturulabilir.\nBaşlangıçta kodları yazmak yıldırıcı olabilir; ancak çalışmaların tekrarlanabilirliği açısından avantaj sağlamaktadır.\nBu duruma bir örnek vermek gerekirse, 20 adet regresyon denklemi kurulup regresyon katsayıları karşılaştırılmak istenirse, R yazılımı sadece regresyon kat sayılarını gösterebilir ve tek bir satırda tüm regresyon sonuçlarını karşılaştırmaya olanak verir. Aynı işlem için diğer istatistiksel yazılımlarda 20 ayrı pencereden elde edilen sonuçların elle yazılarak karşılaştırılması gerekecektir.\nR’da hata yapma olasılığı diğer programlara göre daha fazladır. Hata kaynağı için varsayımların iyi bilinmesi gerekmektedir.\nHız konusunda SPSS ve SAS’a göre avantajlı olsa da diğer dillere göre (Python, Matlab gibi) daha yavaştır.\nGeliştirilen çok fazla paket olduğu için, ihtiyaca uygun en iyi paketin seçimi zor olabilmektedir.\nBu bir dezavantaj gibi görünse de istatistiksel işlemlerin arka planını anlamaya yardımcı olur.\nZayıf hazırlanmış kodlar farklı koşullarda yavaş çalışabilmektedir.\nÇoğu kullanıcı bu eksiklikleri gidermek için kodları değiştiremez. Özellikle çok iyi yapılandırılmamış olan kodlar R’da yavaş çalışabilmektedir."
  },
  {
    "objectID": "01_Kurulum.html#r-ve-rstudio-yüklenmesi",
    "href": "01_Kurulum.html#r-ve-rstudio-yüklenmesi",
    "title": "R ve Rstudio Temeller",
    "section": "R ve Rstudio Yüklenmesi",
    "text": "R ve Rstudio Yüklenmesi\n\nInternet tarayıcısına R yazılımın internet sitesinin ana sayfasının adresi yazılır. https://www.r-project.org/\nSol menüde yer alan “download CRAN” bölümüne tıkladıktan sonra ülke seçilir. Seçilen ülkenin yakınlığı sadece yükleme hızını değiştirecektir.\nÇıkan sayfada “Download and Install R” baslığı altından işletim sistemine uygun olan bağlantı seçilir.\nR konsolda çalışmaya doğrudan başlanabilir; ancak konsol kullanımı bir kod editörü olmadığı için çok kullanışlı değildir.\nRstudio hata ayıklama, görselleştirme araçları ile birlikte yüklenen modern bir kod editörüdür.\nhttps://www.rstudio.com/ internet sitesinden kullanılan bilgisayar ve işletim sistemine uygun olarak seçilip indirilebilmektedir.\nRstudio R ile daha üretken olmanıza yardımcı olacak bir dizi araç içerir, örneğin:\n\nR kodlarınızı vurgulamak için bir sözdizimi vurgulama düzenleyicisi\nR kodlarını yazmanıza yardımcı olacak işlevler (otomatik tamamlama)\nÇeşitli grafikler oluşturmak ve kaydetmek için çeşitli araçlar (ör. histogramlar, dağılım grafiği)\nVerileri içe veya dışa aktarmak için bir çalışma alanı yönetim aracı"
  },
  {
    "objectID": "01_Kurulum.html#diğer-gerekli-yüklemeler",
    "href": "01_Kurulum.html#diğer-gerekli-yüklemeler",
    "title": "R ve Rstudio Temeller",
    "section": "Diğer Gerekli Yüklemeler",
    "text": "Diğer Gerekli Yüklemeler\n\nBenim açıklamalarım yetmediyse R’yi bilgisayarınızda kullanmak için, lütfen daha ayrıntılı talimatlar ve indirmeniz gereken dosyaların bağlantılarının yanı sıra R’yi farklı bilgisayar türlerine yüklemek için bir dizi kılavuza bağlantılar içeren Installing R adresine bakın!!\nYüklemeler konusunda daha da fazlasına ihtiyacımız var ise R studio R !\nVerilen linkte yer alsa da ayrıca eklemeye ihtiyaç duyduğum bağlantılar:\nJava\nRtools Rtools, kaynak koddan derleme yapmaya yarayan araçları içeren bir R yardımcısıdır. Önemli: Eğer Windows kullanıyorsanız, ayrıca Rtools yüklemeniz gerekir.\ndevtools\n\n\n\nCode\ninstall.packages(\"devtools\")"
  },
  {
    "objectID": "01_Kurulum.html#hangi-r-sürümünü-kullanmalısınız",
    "href": "01_Kurulum.html#hangi-r-sürümünü-kullanmalısınız",
    "title": "R ve Rstudio Temeller",
    "section": "Hangi R sürümünü kullanmalısınız?",
    "text": "Hangi R sürümünü kullanmalısınız?\n\nR’yi bilgisayarınıza kurmanın avantajı, kullanmak için internete bağlı olmanız gerekmemesi, dosyalarınızı kaydetmenin ve yönetmenin daha kolay olması ve sunucunun çökmesi durumunda sorun yaşanmamasıdır (bu nadirdir, ancak olmuştur).\nR sunucusunu kullanmanın avantajı, bilgisayarına herhangi bir şey yüklemenize gerek olmaması, sadece web tarayıcınız üzerinden erişebilmenizdir.\nR’yi yükleyemeyeceğiniz bir bilgisayarınız varsa (örneğin Chromebook) veya R’yi bilgisayarınıza yüklemeyle ilgili ciddi sorunlarınız varsa sunucuyu kullanmanızı öneririz."
  },
  {
    "objectID": "01_Kurulum.html#r-studio-hakkında",
    "href": "01_Kurulum.html#r-studio-hakkında",
    "title": "R ve Rstudio Temeller",
    "section": "R Studio Hakkında",
    "text": "R Studio Hakkında\n\nR Studio, kodu deneyebileceğiniz bir konsola sahiptir (Şekil’de sol alt pencerede yer alır.\nAyrıca kod editörü (sol üst), “Ortam” sekmesinde oluşturduğunuz fonksiyonları ve nesneleri gösteren bir pencere ( sağ üst pencere) ve grafikleri, dosya paketlerini ve yardım belgelerini gösteren bir pencere ise (sağ alt) bulunur.\n\n\n\n\n\n\nRStudio arayüzü\n\n\n\n\n\nBu ders boyunca R Studio’da bulunan özelliklerin nasıl kullanılacağı hakkında daha fazla bilgi edineceksiniz, ancak R Studio ekibinden RStudio Essentials 1 izlemenizi şiddetle tavsiye ederim. Video yaklaşık 30 dakika sürmekte ve R Studio’nun ana bölümlerini tanıtmaktadır."
  },
  {
    "objectID": "01_Kurulum.html#basit-islemler",
    "href": "01_Kurulum.html#basit-islemler",
    "title": "R ve Rstudio Temeller",
    "section": "Basit İslemler",
    "text": "Basit İslemler\n\ntoplama işlemi için +,\nçıkarma işlemi için -,\nçarpma işlemi için *,\nbölme işlemi için /,\nüs alma işlemi için ^ veya *\nmod alma icin ise %% operatorleri kullanılmaktadır.\nKodlamanızın büyük bir kısmı nesne oluşturmayı ve nesneleri manipüle etmeyi içerecektir. Nesneler bir şeyler içerir. Bu şeyler sayılar, kelimeler veya işlemlerin ve analizlerin sonucu olabilir\n\nAlıştırma Nesneler oluşturma\n\nAşağıdaki kodu kopyalayıp konsola yapıştırın, kodu kendi adınızı ve yaşınızı kullanacak şekilde değiştirin ve çalıştırın. Enviroment bölmesinde ad, yas, gun, yeniyil ve veri nesnelerinin göründüğünü göreceksiniz.\n\n\n\nCode\nad &lt;- \"ada\"\nyas &lt;- 16 + 20 \ngun &lt;-Sys.Date()\nyeniyil &lt;- as.Date(\"2024-01-01\")\nveri &lt;- rnorm(n = 10, mean = 15, sd = 3)\n\n\n\n\n\n\n\nCalisma alanındaki nesneler\n\n\n\n\n\nBu örneklerde, ad, yas ve yeniyil her zaman ada, 36 değerlerini ve 2024 Yeni Yıl Günü tarihini içerecektir, ancak gun tarihi işletim sisteminden alacaktır ve veri rastgele oluşturulmuş bir veri kümesi olacaktır, bu nedenle bu nesnelerin değerleri statik olmayacaktır.\nDaha da önemlisi, nesneler hesaplamalara dahil olabilir ve birbirleriyle etkileşime girebilir. Örneğin:\n\n\n\nCode\nyas + 10\n\n\n[1] 46\n\n\nCode\nyeniyil - gun\n\n\nTime difference of -262 days\n\n\nCode\nmean(veri)\n\n\n[1] 15.72075\n\n\n\nSon olarak, bu işlemlerin sonucunu yeni bir nesnede saklayabilirsiniz:\n\n\n\nCode\nn1 &lt;- yas + 10\n\n\n\n\n\n\n\n\n!!!\n\n\n\n&lt;- ifadesini içerir şeklinde okumak faydalı olabilir, örneğin ad ifadesi ada metnini içerir.\n\n\n\nBu ders boyunca sürekli olarak nesneler yaratacaksınız ve ilerledikçe onlar ve nasıl davrandıkları hakkında daha fazla bilgi edineceksiniz, ancak şimdilik bunların değerleri kaydetmenin bir yolu olduğunu, bu değerlerin sayı, metin veya işlemlerin sonucu olabileceğini ve yeni değişkenler oluşturmak için başka işlemlerde kullanılabileceğini anlamak yeterlidir.\n\n\n\n\nNesnelerin ‘değişkenler’ olarak adlandırıldığını da görebilirsiniz. Programlama terimlerinde ikisi arasında fark vardır, ancak çok sık eşanlamlı olarak kullanılırlar.\n\n\n\nAlıştırma Nesneler oluşturma\n\nAşağıdaki kodu kopyalayıp konsola yapıştırın.\nEni 4 cm, boyu 10 cm bir dikdörtgenin alanı hesaplayınız.\n\n\n\nCode\n# en nesnesi tanimlama\n\n# boy nesnesi tanimlama\n\n# alan nesnesi tanimlama\n\n# alan nesnesini yazdirma\n\n\n\n\n[1] 40\n\n\n\nEni 4 cm, boyu 10 cm bir dikdörtgenin köşegen uzunluğunu hesaplayınız.\n\n\n\nCode\n# en nesnesi tanimlama\n\n# boy nesnesi tanimlama\n\n# kosegen nesnesi tanimlama\n\n# kosegen nesnesini yazdirma\n\n\n\n\n[1] 10.77033"
  },
  {
    "objectID": "03_Fonksiyonlar.html",
    "href": "03_Fonksiyonlar.html",
    "title": "Fonksiyonlar",
    "section": "",
    "text": "Fonksiyon belli bir görevi yerine getirmek için yazılan bir grup komuttur.\nFonksiyonların çalışması için girdilerinin olması gerekmektedir. Fonksiyonlar girdileri ile yaptıkları işlem sonucunda bir çıktı oluştururlar.\nFonksiyonlar girdileri o fonksiyonun çalışması için önceden belirlenen argümanlar ve o argümanların değerlerinden oluşur. (dilbilimle ilgileniyorsanız, bunları bir özne ve nesne gerektiren fiiller olarak düşünmek isteyebilirsiniz)\nFonksiyonların kullanımında üç noktaya dikkat edilmelidir.\n\nargümanların sırası\nargümanların olağan (default) değerleri\nbazı argümanların zorunlu, bazı argümanların opsiyonel olmasıdır\n\nBir fonksiyonun aldığı tüm argümanlara yardım dokümantasyonunu kullanarak ?function formatını kullanarak bakabilirsiniz. Bazı argümanlar zorunlu, bazıları ise isteğe bağlıdır. İsteğe bağlı bağımsız değişkenler, herhangi bir değer girmezseniz genellikle varsayılan/olağan (normalde yardım belgelerinde belirtilen) bir değer kullanır.\nÖrnek olarak, normal dağılıma sahip bir sayı kümesini rastgele üreten rnorm() fonksiyonunun yardım belgelerine bakalım.\nBir fonksiyonun aldığı tüm argümanlara yardım dokümantasyonunu kullanarak ?function formatını kullanarak bakabilirsiniz. Bazı argümanlar zorunlu, bazıları ise isteğe bağlıdır. İsteğe bağlı bağımsız değişkenler, herhangi bir değer girmezseniz genellikle varsayılan/olağan (normalde yardım belgelerinde belirtilen) bir değer kullanır.\nAlıştırma\nCode\n?rnorm\nCode\nrnorm(n, mean = 0, sd = 1)\nAlıştırma II\nCode\nset.seed(12042016)\nrnorm(n = 5)\n\n\n[1] -0.2896163 -0.6428964  0.5829221 -0.3286728 -0.5110101\nCode\nrnorm(n = 5, mean = 10, sd = 2)\n\n\n[1] 13.320853  9.377956 10.235461  9.811793 13.019102\nEğer internette kod örneklerine bakıyorsanız, sık sık set.seed() fonksiyonu ile başlayan kodlar görebilirsiniz. Bu fonksiyon rastgele sayı üretecini kontrol eder - rastgele sayı üreten herhangi bir fonksiyon kullanıyorsanız (rnorm() gibi), set.seed() fonksiyonunu çalıştırmak aynı sonucu almanızı sağlayacaktır (bazı durumlarda yapmak istediğiniz şey bu olmayabilir). Bu örnekte set.seed() diyoruz, bu aynı rastgele sayıları alacağınız anlamına geliyor."
  },
  {
    "objectID": "03_Fonksiyonlar.html#argüman-isimleri",
    "href": "03_Fonksiyonlar.html#argüman-isimleri",
    "title": "Fonksiyonlar",
    "section": "Argüman isimleri",
    "text": "Argüman isimleri\n\nYukarıdaki örneklerde, kodumuzdaki bağımsız değişken adlarını yazdık (örneğin, n, mean, sd), ancak bu kesinlikle gerekli değildir. Aşağıdaki iki kod satırının her ikisi de aynı sonucu üretecektir (rnorm() fonksiyonunu her çalıştırdığınızda rastgele olduğu için biraz farklı bir sayı kümesi üretecektir, ancak yine de aynı ortalama ve SD’ye sahip olacaklardır):\n\n\n\nCode\nrnorm(n = 6, mean = 3, sd = 1)\nrnorm(6, 3, 1)\n\n\n\nÖnemli olarak, eğer argüman isimlerini yazmazsanız, R argümanların varsayılan sırasını kullanacaktır, yani rnorm için girdiğiniz ilk sayının n olduğunu varsayacaktır. ikinci sayı mean ve üçüncü sayı sddir.\nEğer argüman isimlerini yazarsanız, argümanları istediğiniz sırada yazabilirsiniz:\n\n\n\nCode\nrnorm(sd = 1, n = 6, mean = 3)\n\n\n\nR’yi ilk öğrenirken, fonksiyonun her bir parçasının ne yaptığını hatırlamanıza ve anlamanıza yardımcı olabileceğinden, argüman adlarını yazmayı yararlı bulabilirsiniz. Ancak, becerileriniz ilerledikçe argüman adlarını atlamayı daha hızlı bulabilirsiniz ve ayrıca argüman adlarını kullanmayan çevrimiçi kod örnekleri göreceksiniz, bu nedenle her bir kod parçasının hangi argümana atıfta bulunduğunu anlayabilmek önemlidir (veya kontrol etmek için yardım belgelerine bakın).\nBu derste, her bir fonksiyonu ilk kez kullandığımızda argüman adlarını her zaman yazacağız, ancak sonraki kullanımlarda bunlar atlanabilir."
  },
  {
    "objectID": "03_Fonksiyonlar.html#tab-ile-otomatik-tamamlama",
    "href": "03_Fonksiyonlar.html#tab-ile-otomatik-tamamlama",
    "title": "Fonksiyonlar",
    "section": "TAB ile otomatik tamamlama",
    "text": "TAB ile otomatik tamamlama\n\nR Studio’nun çok kullanışlı bir özelliği, fonksiyonlar için TAB otomatik tamamlama özelliğidir (bkz. Şekil @ref(fig:img-autocomplete)). Fonksiyonun adını yazıp tab tuşuna basarsanız, R Studio size fonksiyonun aldığı argümanları kısa bir açıklama ile birlikte gösterecektir. Argüman adının üzerinde enter tuşuna basarsanız, tıpkı telefonunuzdaki otomatik tamamlama gibi adı sizin için dolduracaktır. Bu, R’yi ilk öğrenirken inanılmaz derecede kullanışlıdır ve bu özelliği sık sık kullanmayı unutmamalısınız.\n\n\n\n\n\n\nTab ile otomatik durdurma"
  },
  {
    "objectID": "03_Fonksiyonlar.html#kişisel-tanımlı-fonksiyon",
    "href": "03_Fonksiyonlar.html#kişisel-tanımlı-fonksiyon",
    "title": "Fonksiyonlar",
    "section": "Kişisel tanımlı fonksiyon",
    "text": "Kişisel tanımlı fonksiyon\n\nKişisel tanımlı fonksiyon yazılması şablonu aşağıdaki gibidir.\n\n\n\nCode\nfonksiyonadi&lt;-  function(argumanlar ve olagan degerleri){\n  kodlar\n  return()\n}\n\n\n\nOluşturulan fonksiyon çalıştırılırken ise aşağıdaki şeklinde çalıştırılır.\n\n\n\nCode\nfonksiyonadi(argumanlar ve degerleri)\n\n\n\nKare alma işlemi aşağıdaki şekilde yapılabilir.\n\n\n\nCode\nsayi &lt;-  4\nsayi * sayi\n\n\n[1] 16\n\n\nCode\nsayi ^2\n\n\n[1] 16\n\n\n\nBu işlem sürekli yapılacaksa fonksiyon olarak yazılabilir.\n\n\n\nCode\n# kare alma fonksiyonu\nkare_al &lt;-  function(sayi){\n  return(sayi*sayi)\n  }\nkare_al(4)\n\n\n[1] 16\n\n\n\nFarklı dereceden üsler alabilen bir fonksiyon yazalım.\n\n\n\nCode\n#üs alma\nüs_al&lt;-  function(x,us){\n  return(x^us)\n  }\nüs_al(3,4)\n\n\n[1] 81\n\n\n\nArgümanlardan birine olağan değer girilmesi\n\n\n\nCode\n#üs alma\nüs_al&lt;-  function(x,us=2){\n  return(x^us)\n  }\nüs_al(3) # us argumanin olagan degeri olan\n\n\n[1] 9\n\n\nCode\n# 2 olduğu için argumana \n# deger girilmediginde kare alir.\n\n\n\nAşağıdaki fonksiyona 3 ve 4 değerleri girilirse çıktı ne olur?\n\n\n\nCode\nmyfunc &lt;-  function(x,y)\n{\na &lt;-  x+y\nb &lt;-  x* y\nreturn(a*b)\n}\nmyfunc(3,4)\n\n\n\nmean() fonksiyonu en sık kullandığımız fonksiyonlardan biridir.\n\n\n\nCode\nx &lt;-  c(1,2,3)\nmean(x)\n\n\n[1] 2\n\n\n\nR base pakette yer alan bu fonksiyonu kendiniz de yazabilirsiniz.\nR’ da deneyim kazandıkça, yaptığınız işlemler karmaşıklaştıkça kendi fonksiyonlarınızı yazma ihtiyacı duyacaksınız.\navg() isminde vektör ortalaması hesaplayan fonksiyon yazınız.\n\n\nYazdığınız fonksiyon ile aşağıdaki işlemi yapınız.\n\n\n\nCode\nx &lt;-  1:1000\navg(x)\n\n\n[1] 500.5\n\n\n\nYazdığınız fonksiyon temel pakette yer alan mean() fonksiyonu ile aynı sonucu verdi mi?\n\n\n\nCode\nidentical(avg(x),mean(x))\n\n\n[1] TRUE\n\n\n\nFonksiyon içinde tanımlanan nesneler çalışma alanına kaydedilmezler.\nFonksiyonlar da R nesnesidir.\n\n\n\nCode\nls()\n\n\n[1] \"avg\"     \"kare_al\" \"sayi\"    \"üs_al\"   \"x\""
  },
  {
    "objectID": "03_Fonksiyonlar.html#yeniden-başlat",
    "href": "03_Fonksiyonlar.html#yeniden-başlat",
    "title": "Fonksiyonlar",
    "section": "Yeniden Başlat",
    "text": "Yeniden Başlat\n’Oturum - R’yi Yeniden Başlat’a tıklayın.\n\n\n\n\n\nThe truth about programming"
  },
  {
    "objectID": "05_Nesneler.html",
    "href": "05_Nesneler.html",
    "title": "Nesne Oluşturma",
    "section": "",
    "text": "Matris oluşturmak için, matrix() fonksiyonu kullanılmaktadır\n\n\n\nCode\nm1 &lt;- matrix(1:12, ncol = 3, nrow = 4); m1\n\n\n     [,1] [,2] [,3]\n[1,]    1    5    9\n[2,]    2    6   10\n[3,]    3    7   11\n[4,]    4    8   12\n\n\n\nbyrow argümanı kullanımı\n\n\n\nCode\nmatrix(1:12, ncol = 3, nrow = 4, byrow = TRUE)\n\n\n     [,1] [,2] [,3]\n[1,]    1    2    3\n[2,]    4    5    6\n[3,]    7    8    9\n[4,]   10   11   12\n\n\n\nMatrisin transpozunu almak için t()\n\n\n\nCode\nt(m1)\n\n\n     [,1] [,2] [,3] [,4]\n[1,]    1    2    3    4\n[2,]    5    6    7    8\n[3,]    9   10   11   12\n\n\n\nbir vektör ile matris çarpımı\n\n\n\nCode\n2 * m1\n\n\n     [,1] [,2] [,3]\n[1,]    2   10   18\n[2,]    4   12   20\n[3,]    6   14   22\n[4,]    8   16   24\n\n\n\n\nCode\nc(1,2,3) * m1\n\n\n     [,1] [,2] [,3]\n[1,]    1   10   27\n[2,]    4   18   10\n[3,]    9    7   22\n[4,]    4   16   36"
  },
  {
    "objectID": "05_Nesneler.html#hazır-veri-setleri",
    "href": "05_Nesneler.html#hazır-veri-setleri",
    "title": "Nesne Oluşturma",
    "section": "Hazır Veri Setleri",
    "text": "Hazır Veri Setleri\n\nTemel pakette yer alan veri setlerinin bir listesine aşağıdaki komutla ulaşabilirsiniz.\n\n\n\nCode\ndata() # yeni bir pencerede açılır.\n\n\n\nVeri setlerinin yer aldığı paketlerde bulunmaktadır.\n\n\n\nCode\n# install.packages(\"datasets\")\nlibrary (datasets)\n# install.packages(\"dslabs\")\nlibrary (dslabs)\n\n\n\nHazır veri setleri çalışma ortamına data() fonksiyonu ile aktarılabilir.\n\n\n\nCode\ndata(WorldPhones) # environmet(calisma alanini) kontrol ediniz. \n\n\n\nhazır veri setlerini incelememek için aşağıdaki komutlar kullanılabilir.\n\n\n\nCode\ndata(cars) # enviromente ekler\niris      # enviromente eklemez!"
  },
  {
    "objectID": "05_Nesneler.html#inceleme",
    "href": "05_Nesneler.html#inceleme",
    "title": "Nesne Oluşturma",
    "section": "İnceleme",
    "text": "İnceleme\n\nBoyut sorgulamamak için farklı fonksiyonlar kullanılabilir.\n\n\n\nCode\ndim(cars) # satir Sutun\n\n\n[1] 50  2\n\n\n\n\nCode\nnrow(cars)\n\n\n[1] 50\n\n\n\n\nCode\nncol(cars)\n\n\n[1] 2\n\n\n\nVeri setlerin ilk satırları head(), son satırları ise tail() fonksiyonu ile incelenebilir. head() fonksiyonu olağan olarak ilk 6 satırı yazdırır.\n\n\n\nCode\nhead(WorldPhones)\n\n\n     N.Amer Europe Asia S.Amer Oceania Africa Mid.Amer\n1951  45939  21574 2876   1815    1646     89      555\n1956  60423  29990 4708   2568    2366   1411      733\n1957  64721  32510 5230   2695    2526   1546      773\n1958  68484  35218 6662   2845    2691   1663      836\n1959  71799  37598 6856   3000    2868   1769      911\n1960  76036  40341 8220   3145    3054   1905     1008\n\n\n\nYazdırılacak satır sayısı n argümanı ile ayarlanır.\n\n\n\nCode\nhead(WorldPhones,n=2)\n\n\n     N.Amer Europe Asia S.Amer Oceania Africa Mid.Amer\n1951  45939  21574 2876   1815    1646     89      555\n1956  60423  29990 4708   2568    2366   1411      733\n\n\n\nWorldPhones veri setinin son 8 satırını yazdıracak kodu yazınız.\n\n\n\nBuraya bakmadan önce kendin denemelisin!\ntail(WorldPhones,n=8)\n\n\n     N.Amer Europe Asia S.Amer Oceania Africa Mid.Amer\n1951  45939  21574 2876   1815    1646     89      555\n1956  60423  29990 4708   2568    2366   1411      733\n1957  64721  32510 5230   2695    2526   1546      773\n1958  68484  35218 6662   2845    2691   1663      836\n1959  71799  37598 6856   3000    2868   1769      911\n1960  76036  40341 8220   3145    3054   1905     1008\n1961  79831  43173 9053   3338    3224   2005     1076\n\n\n\ndatasets paketinde yer alan veri setlerinde examples() bölümünde çeşitli örneklere yer verilmiştir. Örneğin example(WorldPhones)\n\n\n\nCode\nmatplot(rownames(WorldPhones), WorldPhones, type = \"b\", log = \"y\",\n        xlab = \"Year\", ylab = \"Number of telephones (1000's)\")\nlegend(\"bottomright\", colnames(WorldPhones), col = 1:6, lty = 1:5,\n       pch = rep(21, 7))\ntitle(main = \"World phones data: log scale for response\")\n\n\n\n\n\n\n\n\n\n\nTemel paket hariç diğer paketlerdeki veri setlerine data(veriseti, package=\"packagename\") şeklinde ulaşılabilir.\n\n\n\nCode\ndata(CTTdata, package=\"CTT\") \nhead(CTTdata)\n\n\n\n🔗sık kullanılan veri setleri ile ilgili bir yazı:\n🔗tüm veri setlerine ulaşabilmek için ise:\nKullanışlı olmasa da excel, spps gibi veri girişi sağlayan bir arayüz bulunmaktadır.\nAli, Su ve Ece’nin boylarının ve kilolarının seçilmesi\n\n\n\nCode\ndf1&lt;- data.frame() \ndf1 &lt;- edit(df1)\n# duzenlemek icin\nfix(df)\n# gozatmak icin \nView(df)"
  },
  {
    "objectID": "05_Nesneler.html#eleman-seçme",
    "href": "05_Nesneler.html#eleman-seçme",
    "title": "Nesne Oluşturma",
    "section": "Eleman Seçme",
    "text": "Eleman Seçme\nVeri setlerinde eleman seçme matrislerdeki gibidir.\ndf[satirindeks, sutunindeks]\n\ndf’nin birinci satir elemanlarının seçilmesi\n\n\n\nBuraya bakmadan önce kendin denemelisin!\ndf[1,]\n\n\n   ad boy kilo beden\n1 Ali 160   55     S\n\n\n\ndf’nin birinci sütun elemanlarının seçilmesi\n\n\n\nBuraya bakmadan önce kendin denemelisin!\ndf[,1]\n\n\n [1] \"Ali\"   \"Elif\"  \"Su\"    \"Deniz\" \"Aras\"  \"Berk\"  \"Can\"   \"Ece\"   \"Efe\"  \n[10] \"Arda\" \n\n\n\ndf’nin ikinci satır elemanlarının seçilmesi\n\n\n\nBuraya bakmadan önce kendin denemelisin!\ndf[2,]\n\n\n    ad boy kilo beden\n2 Elif 165   55     M\n\n\n\ndf’nin ikinci sütun elemanlarının seçilmesi\n\n\n\n [1] 160 165 170 155 167 162 169 158 160 164\n\n\n\ndf’nin birinci satır üçüncü sütun elemanlarının seçilmesi\n\n\n\n[1] 55\n\n\n\nVeri setlerinde satır elemanları yazdırıldığında veri seti (data.frame), sütun elemanları yazdırıldığında ise vektör (vector) oluşmaktadır.\n\n\n\nCode\n# satir secimi\nis.data.frame(df[1,])\n\n\n[1] TRUE\n\n\n\n\nCode\n# sutun secimi\nis.data.frame(df[,1])\n\n\n[1] FALSE\n\n\n\nSütun seçimi veri seti (data.frame) olarak yapılmak istenirse, drop argümanı FALSE değeri ile kullanılır.\n\n\n\nCode\ndf[,1,drop=FALSE]\n\n\n      ad\n1    Ali\n2   Elif\n3     Su\n4  Deniz\n5   Aras\n6   Berk\n7    Can\n8    Ece\n9    Efe\n10  Arda\n\n\n\nVeri seçim işlemi için subset() fonksiyonu kullanılabilir.\n?subset bir fonksiyonu ilk daha kullanıyorsanız, mutlaka yardım sayfasını inceleyin.\n\nsubset(veriseti, kosul/Kosullar)\n\nBoyu 165cm’den uzun öğrencilerin bilgilerinin seçilmesi\n\n\n\nCode\nsubset(df, boy &gt;165)\n\n\n    ad boy kilo beden\n3   Su 170   57     S\n5 Aras 167   48     S\n7  Can 169   58     M\n\n\n\nsubset() fonksiyonun yardım sayfasındaki örnekleri inceleyebilirsiniz.\n\n\n\nCode\nsubset(airquality, Temp &gt; 90,select = c(Ozone, Temp))\n\n\n    Ozone Temp\n42     NA   93\n43     NA   92\n69     97   92\n70     97   92\n75     NA   91\n102    NA   92\n120    76   97\n121   118   94\n122    84   96\n123    85   94\n124    96   91\n125    78   92\n126    73   93\n127    91   93\n\n\n\n\nCode\nsubset(airquality, Day == 1, select = -Temp)\n\n\n    Ozone Solar.R Wind Month Day\n1      41     190  7.4     5   1\n32     NA     286  8.6     6   1\n62    135     269  4.1     7   1\n93     39      83  6.9     8   1\n124    96     167  6.9     9   1\n\n\n\ndf verisinde beden değişkeni “S” olan satırların seçimi\n\n\n\nBuraya bakmadan önce kendin denemelisin!\nsubset(df,beden ==\"S\")\n\n\n     ad boy kilo beden\n1   Ali 160   55     S\n3    Su 170   57     S\n5  Aras 167   48     S\n9   Efe 160   45     S\n10 Arda 164   47     S\n\n\n\ndf verisinde kilosu 50’in altında olan kişilerden oluşan veri seti oluşturma kodunu tamamlayınız `)`\n\n\n\nBuraya bakmadan önce kendin denemelisin!\nsubset(df, kilo&lt;50)\n\n\n     ad boy kilo beden\n5  Aras 167   48     S\n9   Efe 160   45     S\n10 Arda 164   47     S"
  },
  {
    "objectID": "05_Nesneler.html#eleman-ekleme",
    "href": "05_Nesneler.html#eleman-ekleme",
    "title": "Nesne Oluşturma",
    "section": "Eleman ekleme",
    "text": "Eleman ekleme\n\nVeri setine yeni sütun ekleme isleme $ operatörü ile [[]] operatörü ile cbind() fonksiyonları ile yapılabilmektedir.\n\n\n\nCode\ndf2 &lt;- data.frame(\n      S1 = sample(0:100,20),\n      S2 = runif(n=20 ,min= 50 , max=70)\n)\nhead(df2)\n\n\n  S1       S2\n1 96 66.26711\n2 19 62.40362\n3 88 65.89337\n4 73 62.19860\n5 99 60.40795\n6 27 52.40870\n\n\n\n$ operatörü ile sütun ekleme\n\n\n\nCode\ndf2$S3 &lt;- sample(60:80,20,replace = TRUE)\nhead(df2)\n\n\n  S1       S2 S3\n1 96 66.26711 65\n2 19 62.40362 61\n3 88 65.89337 65\n4 73 62.19860 72\n5 99 60.40795 65\n6 27 52.40870 79\n\n\n\n[[]] operatörü ile sütun ekleme\ndf2 veri setinin ilk üç sütunun rowMeans() fonksiyonu ile ortalamasının alınarak ort isimi ile veri setine eklenmesi\n\n\n\nCode\ndf2[[\"ort\"]] &lt;- round(rowMeans(df2),2)\nhead(df2)\n\n\n  S1       S2 S3   ort\n1 96 66.26711 65 75.76\n2 19 62.40362 61 47.47\n3 88 65.89337 65 72.96\n4 73 62.19860 72 69.07\n5 99 60.40795 65 74.80\n6 27 52.40870 79 52.80\n\n\n\ncbind() fonksiyonu ile sütun ekleme\n\n\n\nCode\ncbind( df2, S4 = 10)\n\n\n   S1       S2 S3   ort S4\n1  96 66.26711 65 75.76 10\n2  19 62.40362 61 47.47 10\n3  88 65.89337 65 72.96 10\n4  73 62.19860 72 69.07 10\n5  99 60.40795 65 74.80 10\n6  27 52.40870 79 52.80 10\n7  23 65.30419 74 54.10 10\n8  30 56.07917 68 51.36 10\n9  75 60.67100 74 69.89 10\n10 45 50.75005 63 52.92 10\n11 93 65.73094 73 77.24 10\n12  8 51.31130 77 45.44 10\n13 49 54.48540 70 57.83 10\n14 84 60.56067 69 71.19 10\n15 35 54.51816 64 51.17 10\n16  9 50.08852 66 41.70 10\n17 16 51.91779 66 44.64 10\n18 82 55.55329 73 70.18 10\n19 32 69.16318 73 58.05 10\n20 43 55.25569 73 57.09 10"
  },
  {
    "objectID": "05_Nesneler.html#eleman-çıkarma",
    "href": "05_Nesneler.html#eleman-çıkarma",
    "title": "Nesne Oluşturma",
    "section": "Eleman çıkarma",
    "text": "Eleman çıkarma\n\nVeri setinden istenilen sütunun çıkarılabilir. Bu işlemi yapmak için iki farklı yol kullanılabilir.\n- operatörü\n\n\n\nCode\nhead(df2,3)\n\n\n  S1       S2 S3   ort\n1 96 66.26711 65 75.76\n2 19 62.40362 61 47.47\n3 88 65.89337 65 72.96\n\n\n\n\nCode\ndf2 &lt;- df2[,-4] \nhead(df2,3)\n\n\n  S1       S2 S3\n1 96 66.26711 65\n2 19 62.40362 61\n3 88 65.89337 65\n\n\n\nNULL operatörü\n\n\n\nCode\ndf2$S3 &lt;- NULL\nhead(df2,3)\n\n\n  S1       S2\n1 96 66.26711\n2 19 62.40362\n3 88 65.89337"
  },
  {
    "objectID": "05_Nesneler.html#satır-ekleme",
    "href": "05_Nesneler.html#satır-ekleme",
    "title": "Nesne Oluşturma",
    "section": "Satır ekleme",
    "text": "Satır ekleme\n\nVeri setlerine değişken ekleyip, çıkarabileceğiniz gibi gözlem de ekleyip, çıkarabilirsiniz. Veri setine iki satır ekleme\n\n\n\nCode\ndim(df2)\n\n\n[1] 20  2\n\n\n\n\nCode\n# eklenecek iki satırlık veri seti oluşturma\ndf3 &lt;- data.frame(S1=c(50,60),S2=c(55.3,65.5))\n# yeni veri seti\ndf4 &lt;- rbind (df2,df3)\ndim(df4)\n\n\n[1] 22  2"
  },
  {
    "objectID": "05_Nesneler.html#veri-yapısı-inceleme",
    "href": "05_Nesneler.html#veri-yapısı-inceleme",
    "title": "Nesne Oluşturma",
    "section": "Veri yapısı inceleme",
    "text": "Veri yapısı inceleme\n\nVeri setlerinin yapısını incelemek icin str() fonksiyonundan yararlanılmaktadır.\n\n\n\nCode\nstr(df)\n\n\n'data.frame':   10 obs. of  4 variables:\n $ ad   : chr  \"Ali\" \"Elif\" \"Su\" \"Deniz\" ...\n $ boy  : num  160 165 170 155 167 162 169 158 160 164\n $ kilo : num  55 55 57 50 48 65 58 62 45 47\n $ beden: Factor w/ 3 levels \"L\",\"M\",\"S\": 3 2 3 2 3 1 2 1 3 3\n\n\n\n“df” veri seti 10 gözlemden, 4 değişken. Her bir değişkenin önünde $ operatörü olduğuna dikkat ediniz.\nveri setinin incelenmek için kullanılabilecek diğer fonksiyon ise attributes()\n\n\n\nCode\nattributes(df)\n\n\n$names\n[1] \"ad\"    \"boy\"   \"kilo\"  \"beden\"\n\n$class\n[1] \"data.frame\"\n\n$row.names\n [1]  1  2  3  4  5  6  7  8  9 10"
  },
  {
    "objectID": "05_Nesneler.html#isimlendirme",
    "href": "05_Nesneler.html#isimlendirme",
    "title": "Nesne Oluşturma",
    "section": "Isimlendirme",
    "text": "Isimlendirme\n\nVeri setleri vektör birleştirme üzerinden yapılırsa, vektör adları sütun ismi olarak kullanılır. Ancak bu isimler değiştirilebilir. Bu işlem data.frame() fonksiyonu içinde yapılabilir.\n\n\n\nCode\ndf &lt;- data.frame(isim = ad,\n                 boyolcum = boy,\n                 kiloolcum= kilo, \n                 bedenolcum=beden)\ndf\n\n\n    isim boyolcum kiloolcum bedenolcum\n1    Ali      160        55          S\n2   Elif      165        55          M\n3     Su      170        57          S\n4  Deniz      155        50          M\n5   Aras      167        48          S\n6   Berk      162        65          L\n7    Can      169        58          M\n8    Ece      158        62          L\n9    Efe      160        45          S\n10  Arda      164        47          S\n\n\n\nVeri seti isimlendirme de diğer bir yol ise names() ya da colnames() fonksiyonlarıdır.\n\n\n\nCode\ndf &lt;- data.frame(ad,boy,kilo,beden)\nnames(df) &lt;- c(\"isim\",\"boyolcum \",\"kiloolcum\",\"bedenolcum\")\ndf\n\n\n    isim boyolcum  kiloolcum bedenolcum\n1    Ali       160        55          S\n2   Elif       165        55          M\n3     Su       170        57          S\n4  Deniz       155        50          M\n5   Aras       167        48          S\n6   Berk       162        65          L\n7    Can       169        58          M\n8    Ece       158        62          L\n9    Efe       160        45          S\n10  Arda       164        47          S"
  },
  {
    "objectID": "05_Nesneler.html#betimsel-istatistikler",
    "href": "05_Nesneler.html#betimsel-istatistikler",
    "title": "Nesne Oluşturma",
    "section": "Betimsel istatistikler",
    "text": "Betimsel istatistikler\n\nVeri setinin tümüne ilişkin betimsel istatistikler\n\n\n\nCode\nsummary(cars)\n\n\n     speed           dist       \n Min.   : 4.0   Min.   :  2.00  \n 1st Qu.:12.0   1st Qu.: 26.00  \n Median :15.0   Median : 36.00  \n Mean   :15.4   Mean   : 42.98  \n 3rd Qu.:19.0   3rd Qu.: 56.00  \n Max.   :25.0   Max.   :120.00  \n\n\n\nVeri setinin tek değişkenine ilişkin betimsel istatistikler\n\n\n\nCode\nsummary(cars$speed)\n\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n    4.0    12.0    15.0    15.4    19.0    25.0 \n\n\nattach() fonksiyonu ile bir veri setinin sütunları sütun isimi ile enviromente eklenir. Aynı işlem detach() fonksiyonu ile tersine alınabilir.\n\n\nCode\nsummary(women$height)   \n\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n   58.0    61.5    65.0    65.0    68.5    72.0 \n\n\n\n\nCode\nattach(women)\n\n\n\n\nCode\nsummary(height)   # Ayni nesne isimi ile çağırılır.\n\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n   58.0    61.5    65.0    65.0    68.5    72.0 \n\n\n\n\nCode\nheight &lt;- height*2.54   # Bunu yapmamaya calisin!!\n\n\n\n\nCode\nfind(\"height\")\n\n\n[1] \".GlobalEnv\" \"women\"     \n\n\n\n\nCode\nsummary(height)         # Yeni değişken\n\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  147.3   156.2   165.1   165.1   174.0   182.9 \n\n\n\n\nCode\nrm(height)\n\n\n\n\nCode\ndetach(\"women\")\n\n\n\n\nCode\nsummary(women$height)   # unchanged\n\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n   58.0    61.5    65.0    65.0    68.5    72.0"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "İçerik",
    "section": "",
    "text": "R ve R studio kurulumu, gerekli diğer yüklemeler (Rtools, java vb. ), temel bilgiler, atama operatoru ve basit islemler\nPaket kurulumu ve kullanımı"
  },
  {
    "objectID": "about.html#hafta-1-r-ve-rstudio-temeller",
    "href": "about.html#hafta-1-r-ve-rstudio-temeller",
    "title": "İçerik",
    "section": "",
    "text": "R ve R studio kurulumu, gerekli diğer yüklemeler (Rtools, java vb. ), temel bilgiler, atama operatoru ve basit islemler\nPaket kurulumu ve kullanımı"
  },
  {
    "objectID": "about.html#hafta-2-programlama-dili-esasları",
    "href": "about.html#hafta-2-programlama-dili-esasları",
    "title": "İçerik",
    "section": "Hafta 2: Programlama Dili Esasları",
    "text": "Hafta 2: Programlama Dili Esasları\n\nFonksiyonlar\nNesneler - I\nNesneler - II"
  },
  {
    "objectID": "about.html#hafta-3-markdown-kullanımı",
    "href": "about.html#hafta-3-markdown-kullanımı",
    "title": "İçerik",
    "section": "Hafta 3: Markdown Kullanımı",
    "text": "Hafta 3: Markdown Kullanımı\n\nMarkdown Kullanımı"
  },
  {
    "objectID": "about.html#hafta-4-markdown-kullanımı",
    "href": "about.html#hafta-4-markdown-kullanımı",
    "title": "İçerik",
    "section": "Hafta 4: Markdown Kullanımı",
    "text": "Hafta 4: Markdown Kullanımı"
  },
  {
    "objectID": "about.html#hafta-5-veri-düzenleme",
    "href": "about.html#hafta-5-veri-düzenleme",
    "title": "İçerik",
    "section": "Hafta 5: Veri Düzenleme",
    "text": "Hafta 5: Veri Düzenleme"
  },
  {
    "objectID": "about.html#hafta-6-29-ekim-resmi-tatil",
    "href": "about.html#hafta-6-29-ekim-resmi-tatil",
    "title": "İçerik",
    "section": "Hafta 6: 29 Ekim (Resmi Tatil)",
    "text": "Hafta 6: 29 Ekim (Resmi Tatil)"
  },
  {
    "objectID": "about.html#hafta-7-veri-düzenleme",
    "href": "about.html#hafta-7-veri-düzenleme",
    "title": "İçerik",
    "section": "Hafta 7: Veri Düzenleme",
    "text": "Hafta 7: Veri Düzenleme"
  },
  {
    "objectID": "about.html#hafta-8-ara-sınav",
    "href": "about.html#hafta-8-ara-sınav",
    "title": "İçerik",
    "section": "Hafta 8: Ara Sınav",
    "text": "Hafta 8: Ara Sınav"
  },
  {
    "objectID": "about.html#hafta-9-veri-görselleşitirme",
    "href": "about.html#hafta-9-veri-görselleşitirme",
    "title": "İçerik",
    "section": "Hafta 9: Veri Görselleşitirme",
    "text": "Hafta 9: Veri Görselleşitirme"
  },
  {
    "objectID": "about.html#hafta-10-veri-görselleşitirme",
    "href": "about.html#hafta-10-veri-görselleşitirme",
    "title": "İçerik",
    "section": "Hafta 10: Veri Görselleşitirme",
    "text": "Hafta 10: Veri Görselleşitirme"
  },
  {
    "objectID": "about.html#hafta-10-hipotez-testleri-ve-raporlama",
    "href": "about.html#hafta-10-hipotez-testleri-ve-raporlama",
    "title": "İçerik",
    "section": "Hafta 10: Hipotez testleri ve raporlama",
    "text": "Hafta 10: Hipotez testleri ve raporlama"
  },
  {
    "objectID": "about.html#hafta-11-korelasyon-türleri-ve-basit-regresyon",
    "href": "about.html#hafta-11-korelasyon-türleri-ve-basit-regresyon",
    "title": "İçerik",
    "section": "Hafta 11: Korelasyon türleri ve basit regresyon",
    "text": "Hafta 11: Korelasyon türleri ve basit regresyon"
  },
  {
    "objectID": "about.html#hafta-12-çok-değişkenli-istatistik-varsayımları",
    "href": "about.html#hafta-12-çok-değişkenli-istatistik-varsayımları",
    "title": "İçerik",
    "section": "Hafta 12: Çok değişkenli istatistik varsayımları",
    "text": "Hafta 12: Çok değişkenli istatistik varsayımları"
  },
  {
    "objectID": "about.html#hafta-13-çoklu-regresyon",
    "href": "about.html#hafta-13-çoklu-regresyon",
    "title": "İçerik",
    "section": "Hafta 13: Çoklu Regresyon",
    "text": "Hafta 13: Çoklu Regresyon"
  },
  {
    "objectID": "about.html#hafta-14-çoklu-regresyon",
    "href": "about.html#hafta-14-çoklu-regresyon",
    "title": "İçerik",
    "section": "Hafta 14: Çoklu Regresyon",
    "text": "Hafta 14: Çoklu Regresyon"
  },
  {
    "objectID": "demo/repro.html",
    "href": "demo/repro.html",
    "title": "Uretilebilir Rapor 1",
    "section": "",
    "text": "Burada iki koşullu bir çalışmadan elde edilen verileri simüle edeceğiz. A koşulundaki ortalama 0 ve B koşulundaki ortalama 1’dir.\n\n\nCode\nn &lt;- 100\n\ndata &lt;- data.frame(\n  id = 1:n,\n  condition = c(\"A\", \"B\") |&gt; rep(each = n/2),\n  dv = c(rnorm(n/2, 0), rnorm(n/2, 1))\n)"
  },
  {
    "objectID": "demo/repro.html#veri-üretim",
    "href": "demo/repro.html#veri-üretim",
    "title": "Uretilebilir Rapor 1",
    "section": "",
    "text": "Burada iki koşullu bir çalışmadan elde edilen verileri simüle edeceğiz. A koşulundaki ortalama 0 ve B koşulundaki ortalama 1’dir.\n\n\nCode\nn &lt;- 100\n\ndata &lt;- data.frame(\n  id = 1:n,\n  condition = c(\"A\", \"B\") |&gt; rep(each = n/2),\n  dv = c(rnorm(n/2, 0), rnorm(n/2, 1))\n)"
  },
  {
    "objectID": "demo/repro.html#grafik",
    "href": "demo/repro.html#grafik",
    "title": "Uretilebilir Rapor 1",
    "section": "Grafik",
    "text": "Grafik"
  }
]